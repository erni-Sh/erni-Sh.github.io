{"version":3,"sources":["components/message/message.module.css","components/offers-list/offers-list.module.css","components/offers-list-loader/offers-list-loader.module.css","components/category-list/category-list.module.css","components/partners/partners.module.css","store/api/word-press-api.js","const.jsx","components/message/message.jsx","img/app-store-btn.svg","img/google-play-btn.svg","components/download/download.jsx","img/sokrat-logo.svg","components/popup-confidentiality/popup-confidentiality.jsx","components/popup-conditions/popup-conditions.jsx","components/footer/footer.jsx","components/search/search.jsx","img/list.svg","img/camera-icon.svg","components/popup-compare/popup-compare.jsx","components/popup-app/popup-app.jsx","components/header/header.jsx","components/page-layout/page-layout.jsx","components/under-construction-page/under-construction-page.jsx","components/categories-page/categories-page.jsx","components/courses-by-category-page/courses-by-category-page.jsx","store/api/fetch-custom.js","components/main-slider-loader/main-slider-loader.jsx","types/prop-types.js","components/main-slider/main-slider.jsx","components/category-list-loader/category-list-loader.jsx","utils/util.js","components/popup-category/popup-category.jsx","components/category-list/category-list.jsx","components/mobile-app-info/mobile-app-info.jsx","components/offers-list/offers-list.jsx","components/partners-loader/partners-loader.jsx","components/partners/partners.jsx","utils/api.js","store/api/courses-slice.js","store/api/main-categories-slice.js","store/api/partners-slice.js","store/api/practice-partners-slice.js","store/api/categories-slice.js","components/offers-list-loader/offers-list-loader.jsx","components/main-page-sidebar/main-page-sidebar.jsx","components/main-page/main-page.jsx","store/api/campaigns-slice.js","img/slogan.png","components/page-header/page-header.jsx","components/course-page/course-info.jsx","components/sidebar-info/sidebar-info.jsx","components/course-page/course-teachers.jsx","components/course-page/course-program.jsx","components/course-page/course-certificate.jsx","components/course-page/course-pay.jsx","img/page-course-img.svg","store/api/course-slice.js","components/course-page/course-page.jsx","img/practice-card.png","components/sidebar-category/sidebar-category.jsx","components/courses-page/courses-page.jsx","components/not-found-page/not-found-page.jsx","components/partner-page/partner-page.jsx","components/practices-page/practices-page.jsx","components/practice-page/practice-info.jsx","components/practice-page/practice-page.jsx","components/search-result-page/search-result-page.jsx","components/instructor-page/instructor-info.jsx","components/courses-list/courses-list.jsx","components/instructor-page/instructor-courses.jsx","components/instructor-page/instructor-page.jsx","components/popup-cookie/popup-cookie.jsx","components/app/app.js","index.js"],"names":["module","exports","wordPressApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","AppRoute","wordPressApiResourcePath","Message","props","message","onButtonClick","isButtonVisible","className","styles","messageText","messageButton","type","onClick","defaultProps","Download","isTitleVisible","href","target","rel","src","appStoreImage","alt","width","height","googlePlayImage","PopUpConfidentiality","visible","setVisible","e","stopPropagation","PopUpConditions","Footer","useState","visibleConfident","setVisibleConfident","visibleConditions","setVisibleConditions","to","xlinkHref","sokratLogoImage","Search","history","useHistory","role","method","id","action","onSubmit","evt","preventDefault","push","htmlFor","placeholder","name","PopUpCompare","content","PopUpApp","visibleApp","setVisibleApp","useEffect","html","document","getElementsByTagName","classList","add","remove","Header","visiblePopUpCompare","setVisiblePopUpCompare","visiblePopUpApp","setVisiblePopUpApp","logo","bookmarkIcon","cameraIcon","activeClassName","exact","PageLayout","children","UnderConstructionPage","CategoriesPage","CoursesByCategoryPage","fetchData","slugs","a","console","clear","requestArr","request","delay","Promise","resolve","reject","key","data","setTimeout","log","fetch","then","res","status","error","Error","statusText","response","title","json","posts","catch","Object","keys","length","result","WIDTH_PX","MainSliderLoader","speed","viewBox","backgroundColor","foregroundColor","PropTypes","shape","number","isRequired","string","pictogram","banner","link","MainSlider","campaigns","isLoading","visiblePromoPopUp","setVisiblePromoPopUp","contentPromoPopUp","setContentPromoPopUp","slidesPerView","spaceBetween","pagination","el","clickable","autoplay","map","contentPromo","style","picture_promo","MainSliderPopUp","sokrat_learn_partner","learn_partner_png","post_title","coupon_promo","link_promolink_promo","SwiperCore","use","Pagination","Autoplay","IMG_WIDTH_IN_PX","CategoryListLoader","slides","Array","fill","_","index","startXInPx","Fragment","x","y","rx","ry","generateAppRoute","appRoute","appRouteEnding","split","encodeURI","PopUpCategory","categories","category","i","slug","CategoryList","visibleAllCategory","setVisibleAllCategory","freeMode","virtual","cache","addSlidesAfter","addSlidesBefore","onInit","swiper","update","arrayIndex","virtualIndex","value","media","srcSet","MobileAppInfo","Virtual","ids","entities","Navigation","OffersList","mainCourses","componentId","navigation","sliderWidthAuto","componentUniqClassName","routePath","post_name","SwiperSlide","displayType","thousandSeparator","suffix","ID","classNames","Carousel","CarouselList","nextEl","prevEl","grabCursor","breakpoints","PartnersLoader","Partners","partners","partner","logo_svg","since","transformMainCategory","inputString","char","adaptedCategory","idCourse","id_course","slot","test","trim","slice","course","parseInt","Number","isNaN","Infinity","coursesIds","Set","transformPracticePartner","rendered","coursesAdapter","createEntityAdapter","coursesSlice","injectEndpoints","builder","getCourses","query","transformResponse","addMany","getInitialState","selectCoursesResult","useGetCoursesQuery","select","mainCategoriesSlice","createSelector","coursesResult","getMainCategories","sort","useGetMainCategoriesQuery","selectMainCategoriesResult","partnersAdapter","practicePartnersAdapter","getPartners","useGetPartnersQuery","categoriesAdapter","getPracticePartners","useGetPracticePartnersQuery","useGetCategoriesQuery","getCategories","OffersListLoader","slidesCount","isWrapper","Wrapper","MainPageSidebar","PARTNERS_COMPONENT_ID","getCampaigns","useGetCampaignsQuery","nanoid","PRACTICE_PARTNERS_COMPONENT_ID","MainPage","setCampaigns","setCategories","mainCategories","setMainCategories","setPartners","practicePartners","setPracticePartners","totalData","setTotalData","mainCategoryComponents","refetchAllEndpoints","useCallback","main_courses","partners_list","PageHeader","headerPic","xmlns","transform","x1","stroke","strokeLinecap","strokeWidth","SloganImg","CourseInfo","database","SidebarInfo","duration","format","partnersTrumb","partnerLink","CourseTeachers","teachers","trumb","CourseProgram","program","CourseCertificate","certificate","CoursePay","courseData","buttonPopup","setButtonPopup","CoursePopUp","trigger","setTrigger","defaultValue","readOnly","disabled","propTypes","array","courseSlice","getCourse","selectCourseResult","useGetCourseQuery","CourseData","courseResult","price","descr","courseTeachersData","courseProgramData","courseCetificateData","CoursePage","postContent","setPostContent","courseId","useParams","post","PageHeaderPic","SidebarCategory","blockTitle","isError","count","CoursesPage","isCategoriesLoading","isFetching","isCoursesError","NotFoundPage","PartnerPage","PracticesPage","PracticeInfo","practiceTitle","pricticePrice","practiceDescr","practiceHardSkills","practiceSoftSkills","skill","PracticeData","practiceLink","refetchMainCategories","refetch","SearchResultPage","InstructorInfo","position","experience","teacher_raiting","teacher_company","teacher_company_2","teacher_company_3","CoursesList","contentCats","courses","InstructorCourses","categoryList","InstructorCategory","InstrustorCourses","InstructorPage","instructorData","setInstructorData","instructorId","source_url","PopUpCookie","visibleCookie","setVisibleCookie","App","path","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0647b9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__y8od2\",\"messageText\":\"message_messageText__CyqXX\",\"messageButton\":\"message_messageButton__KcvsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CarouselList\":\"offers-list_CarouselList__K1R0Q\",\"SwiperSlide\":\"offers-list_SwiperSlide__264cJ\",\"Carousel\":\"offers-list_Carousel__1WLIj\",\"CarouselImg\":\"offers-list_CarouselImg__2S06F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"offers-list-loader_Wrapper__2GL3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CategoryImg\":\"category-list_CategoryImg__y36Jv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PartnersList\":\"partners_PartnersList__yLPQU\",\"SwiperSlide\":\"partners_SwiperSlide__2UueP\",\"PartnersItem\":\"partners_PartnersItem__2U07T\",\"PartnersImg\":\"partners_PartnersImg__JHFYN\"};","\r\n/* eslint-disable */\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst WORD_PRESS_API_BASE_URL = 'https://sokratapp.ru/wp-json/wp/v2/';\r\n\r\n// const WORD_PRESS_API_BASE_URL = 'https://u99351.test-handyhost.ru/wp-json/wp/v2/';\r\n\r\n// https://u99351.test-handyhost.ru/wp-json/wp/v2/\r\n// https://sokratapp.ru/wp-json/wp/v2/\r\n\r\nexport const wordPressApi = createApi({\r\n  reducerPath: 'wordPressApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: WORD_PRESS_API_BASE_URL }),\r\n  endpoints: () => ({}),\r\n});\r\n\r\n","export const AppRoute = {\r\n  ROOT: '/',\r\n  ERROR: '/error',\r\n  COURSES: '/courses/',\r\n  COURSE: '/courses/:courseId',\r\n  PRACTICES: '/practices',\r\n  PRACTICE: '/practice',\r\n  CATEGORIES: '/categories',\r\n  SEARCH_RESULT: '/search-result',\r\n  COURSES_BY_CATEGORY: '/courses-by-category/:category',\r\n  PARTNERS: '/partners/:partner',\r\n\r\n  INSTRUCTOR: '/instructor/:instructorId',\r\n};\r\n\r\nexport const DECIMAL_RADIX = 10;\r\n\r\nexport const wordPressApiResourcePath = {\r\n  CAMPAIGNS: 'sokrat_promo',\r\n  MAIN_CATEGORIES: 'sokrat_main_category',\r\n  COURSES: '',\r\n  PARTNERS_MAIN: 'sokrat_partner_main',\r\n  PARTNERS_PRACTICE_MAIN: 'sokrat_partn_job_mai',\r\n  PARTNERS: 'sokrat_vacancy_partn',\r\n  PRACTICE_PARTNERS: 'sokrat_learn_partner',\r\n  CATEGORIES: 'product_cat',\r\n};\r\n\r\nexport const Breakpoint = {\r\n  LARGE: 1440,\r\n  MEDIUM: 768,\r\n  SMALL: 320,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './message.module.css';\r\n\r\nconst ERROR_MESSAGE = 'Ошибка :-(';\r\n\r\nfunction Message(props) {\r\n  const {\r\n    message,\r\n    onButtonClick,\r\n    isButtonVisible,\r\n  } = props;\r\n\r\n  return (\r\n    <section className={styles.message}>\r\n      <h2 className=\"visually-hidden\">Уведомление об ошибке</h2>\r\n      <p className={styles.messageText}>{message}</p>\r\n      {isButtonVisible && (\r\n        <button\r\n          className={`btn btn--pink ${styles.messageButton}`}\r\n          type=\"button\"\r\n          onClick={onButtonClick}\r\n        >\r\n          Попробовать ещё раз\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n  isButtonVisible: PropTypes.bool.isRequired,\r\n};\r\n\r\nMessage.defaultProps = {\r\n  message: ERROR_MESSAGE,\r\n  onButtonClick: () => {},\r\n  isButtonVisible: true,\r\n};\r\n\r\nexport default Message;\r\n","export default __webpack_public_path__ + \"static/media/app-store-btn.ce77beb7.svg\";","export default __webpack_public_path__ + \"static/media/google-play-btn.4f134dd4.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport appStoreImage from '../../img/app-store-btn.svg';\r\nimport googlePlayImage from '../../img/google-play-btn.svg';\r\n\r\nfunction Download({ isTitleVisible, className }) {\r\n  return (\r\n    <div className={`download ${className}`}>\r\n      {isTitleVisible && <p className='download__title'>Скачай на свой телефон</p>}\r\n      <div className='download__btn-wrapper'>\r\n        <a\r\n          href='https://apps.apple.com/ru/app/sokrat/id1548987952'\r\n          className='download__btn-link download__btn-link--appstore'\r\n          target='_blank'\r\n          rel='noreferrer noopener'\r\n        >\r\n          <img\r\n            src={appStoreImage}\r\n            alt='Скачать с App Store'\r\n            className='download__btn-appstore-img'\r\n            width='135'\r\n            height='45'\r\n          />\r\n        </a>\r\n\r\n        <a\r\n          href='https://play.google.com/store/apps/details?id=space.jscorp.sokrat&hl=ru&gl=US'\r\n          className='download__btn-link download__btn-link--gplay'\r\n          target='_blank'\r\n          rel='noreferrer noopener'\r\n        >\r\n          <img\r\n            src={googlePlayImage}\r\n            alt='Скачать Google Play'\r\n            className='download__btn-gplay-img'\r\n            width='152'\r\n            height='45'\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDownload.propTypes = {\r\n  isTitleVisible: PropTypes.bool.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nDownload.defaultProps = {\r\n  isTitleVisible: true,\r\n  className: '',\r\n};\r\n\r\nexport default Download;\r\n","export default __webpack_public_path__ + \"static/media/sokrat-logo.4d8585cc.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PopUpConfidentiality({visible, setVisible}) {\r\n  return (\r\n    <section className={visible ? 'popup-confidentiality' : 'popup-confidentiality popup-confidentiality--hidden'} onClick={() => setVisible(false)}>\r\n      <div className=\"popup-confidentiality__block\" onClick={(e) => e.stopPropagation()}>\r\n        <h2 className=\"popup-confidentiality__title\">Frontend Developer</h2>\r\n        <button className=\"popup-confidentiality__close\" type=\"button\" onClick={() => setVisible(false)}/>\r\n        <p className=\"popup-confidentiality__text\">\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopUpConfidentiality.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  setVisible: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PopUpConditions({visible, setVisible}) {\r\n  return (\r\n    <section className={visible ? 'popup-conditions' : 'popup-conditions popup-conditions--hidden'} onClick={() => setVisible(false)}>\r\n      <div className=\"popup-conditions__block\" onClick={(e) => e.stopPropagation()}>\r\n        <h2 className=\"popup-conditions__title\">Условия использования</h2>\r\n        <button className=\"popup-conditions__close\" type=\"button\" onClick={() => setVisible(false)}/>\r\n        <p className=\"popup-conditions__text\">\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n          Текст политики Текст политики Текст политики Текст политики Текст политики Текст политики Текст\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopUpConditions.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  setVisible: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppRoute } from '../../const';\r\nimport Download from '../download/download';\r\nimport sokratLogoImage from '../../img/sokrat-logo.svg';\r\n\r\nimport PopUpConfidentiality from '../popup-confidentiality/popup-confidentiality';\r\nimport PopUpConditions from '../popup-conditions/popup-conditions';\r\n\r\nexport function Footer() {\r\n\r\n  const [ visibleConfident, setVisibleConfident ] = useState(false);\r\n  const [ visibleConditions, setVisibleConditions ] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <footer className='footer'>\r\n        <div className='footer__wrapper'>\r\n          <div className='footer__left-col'>\r\n            <div className='footer__col-wrapper'>\r\n              <div className='footer__nav-wrapper'>\r\n                <p className='footer__nav-title'>Пользователям</p>\r\n                <ul className='footer__nav-list'>\r\n                  <li className='footer__nav-item'>\r\n                    <Link to='#' className='footer__nav-link'>\r\n                      Все курсы\r\n                    </Link>\r\n                  </li>\r\n                  <li className='footer__nav-item'>\r\n                    <Link to='#' className='footer__nav-link'>\r\n                      Консультант\r\n                    </Link>\r\n                  </li>\r\n                  <li className='footer__nav-item'>\r\n                    <Link to='#' className='footer__nav-link'>\r\n                      Оплата обучения\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className='footer__nav-wrapper'>\r\n                <p className='footer__nav-title'>Партнерам</p>\r\n                <ul className='footer__nav-list'>\r\n                  <li className='footer__nav-item'>\r\n                    <Link to='#' className='footer__nav-link'>\r\n                      Как это работает?\r\n                    </Link>\r\n                  </li>\r\n                  <li className='footer__nav-item'>\r\n                    <Link to='#' className='footer__nav-link'>\r\n                      Подключиться\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='socials'>\r\n              <p className='socials__title'>Мы в социальных сетях</p>\r\n              <ul className='socials__list'>\r\n                <li className='socials__item'>\r\n                  <span className='visually-hidden'>Ссылка на инстаграм</span>\r\n                  <Link to='#' className='socials__link'>\r\n                    <svg\r\n                      className='socials__icon socials__icon--instagram'\r\n                      width='31'\r\n                      height='31'\r\n                    >\r\n                      <use xlinkHref='#icon-instagram'></use>\r\n                    </svg>\r\n                  </Link>\r\n                </li>\r\n                <li className='socials__item'>\r\n                  <span className='visually-hidden'>Фейсбук</span>\r\n                  <Link to='#' className='socials__link'>\r\n                    <svg\r\n                      className='socials__icon socials__icon--facebook'\r\n                      width='31'\r\n                      height='31'\r\n                    >\r\n                      <use xlinkHref='#icon-facebook'></use>\r\n                    </svg>\r\n                  </Link>\r\n                </li>\r\n                <li className='socials__item'>\r\n                  <span className='visually-hidden'>Ссылка на ВКонтакте</span>\r\n                  <Link to='#' className='socials__link'>\r\n                    <svg\r\n                      className='socials__icon socials__icon--vk'\r\n                      width='31'\r\n                      height='31'\r\n                    >\r\n                      <use xlinkHref='#icon-vk'></use>\r\n                    </svg>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='footer__right-col'>\r\n            <div className='logo logo--footer'>\r\n              <Link to={AppRoute.ROOT} className='logo__link'>\r\n                <img\r\n                  src={sokratLogoImage}\r\n                  alt='Sokrat Logo'\r\n                  className='logo__img--footer'\r\n                  width='223'\r\n                  height='51'\r\n                />\r\n              </Link>\r\n\r\n              <p className='logo__text'>Тысячи знаний внутри</p>\r\n            </div>\r\n            <Download />\r\n          </div>\r\n        </div>\r\n        <div className='bottom-bar'>\r\n          <div className='bottom-bar__wrapper'>\r\n            <ul className='bottom-bar__nav-list'>\r\n              <li className='bottom-bar__nav-item'>\r\n                <Link to='#' className='bottom-bar__nav-link' onClick={() => setVisibleConditions(true)}>\r\n                  Условия использования\r\n                </Link>\r\n              </li>\r\n              <li className='bottom-bar__nav-item' onClick={() => setVisibleConfident(true)}>\r\n                <Link to='#' className='bottom-bar__nav-link'>\r\n                  Политика конфиденциальности\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <p className='bottom-bar__copyright'>\r\n              © <span className='bottom-bar__copyright-year'>2021</span> Sokrat.\r\n              Все права защищены\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n      <PopUpConfidentiality\r\n        visible={visibleConfident}\r\n        setVisible={setVisibleConfident}\r\n      />\r\n      <PopUpConditions\r\n        visible={visibleConditions}\r\n        setVisible={setVisibleConditions}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppRoute } from '../../const';\r\n\r\nfunction Search() {\r\n  const history = useHistory();\r\n\r\n  const formSubmitHandler = (evt) => {\r\n    evt.preventDefault();\r\n    history.push(AppRoute.SEARCH_RESULT);\r\n  };\r\n\r\n  return (\r\n    <div className='search'>\r\n      <form\r\n        className='search__form'\r\n        role='search'\r\n        method='get'\r\n        id='search__form-header'\r\n        action='#'\r\n        onSubmit={formSubmitHandler}\r\n      >\r\n        <label className='visually-hidden' htmlFor='search__input'>\r\n                    Поиск по курсам\r\n        </label>\r\n        <input\r\n          className='search__input'\r\n          id='search__input'\r\n          type='text'\r\n          placeholder='Поиск по курсам'\r\n          name='s'\r\n        />\r\n        <button\r\n          className='search__submit-btn'\r\n          type='submit'\r\n          id='search__submit-btn'\r\n        >\r\n                    Найти\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/list.a85dc2cd.svg\";","export default __webpack_public_path__ + \"static/media/camera-icon.eca41c97.svg\";","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PopUpCompare({visible, setVisible, content}) {\r\n  \r\n  // let html = document.getElementsByTagName('html')[0];\r\n  // visible ? html.classList.add(\"fixed\") : html.classList.remove(\"fixed\");\r\n\r\n  return (\r\n    <section className={visible ? 'popup-compare' : 'popup-compare popup-compare--hidden'} onClick={() => setVisible(false)}>\r\n      <div className=\"popup-compare__block\" onClick={(e) => e.stopPropagation()}>\r\n        <h2 className=\"popup-compare__title\">Сравните курсы</h2>\r\n        <button className=\"popup-compare__close\" type=\"button\">Добавить курс</button>\r\n        <ul className=\"popup-compare__list\">\r\n          <li className=\"popup-compare__item popup-compare__item--titles\">\r\n            <p className=\"popup-compare__title-name\">Название курса</p>\r\n            <p className=\"popup-compare__title-name\">Прожолжительность</p>\r\n            <p className=\"popup-compare__title-name\">Цена</p>\r\n          </li>\r\n          <li className=\"popup-compare__item\">\r\n            <p className=\"popup-compare__name\">Мва – general management</p>\r\n            <p className=\"popup-compare__duration\">4 месяца</p>\r\n            <p className=\"popup-compare__price\">100.000</p>\r\n            <button className=\"popup-compare__btn btn\">Купить курс</button>\r\n          </li>\r\n          <li className=\"popup-compare__item\">\r\n            <p className=\"popup-compare__name\">Мва – general management</p>\r\n            <p className=\"popup-compare__duration\">4 месяца</p>\r\n            <p className=\"popup-compare__price\">100.000</p>\r\n            <button className=\"popup-compare__btn btn\">Купить курс</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopUpCompare.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  setVisible: PropTypes.func.isRequired,\r\n  content: PropTypes.array.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PopUpApp({visibleApp, setVisibleApp}) {\r\n  // const [ visibleApp, setVisibleApp ] = useState(false);\r\n  // const [ showed, setShowed ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // if(!showed) {\r\n    //   setTimeout(() => {\r\n    //     setShowed(true);\r\n    //     setVisibleApp(true);\r\n    //   }, 5000);\r\n    // }\r\n  });\r\n\r\n  let html = document.getElementsByTagName('html')[0];\r\n  visibleApp && html.classList.add(\"fixed\");\r\n\r\n  return (\r\n    <section className={visibleApp ? 'popup-app' : 'popup-app popup-app--hidden'}\r\n      onClick={() => {\r\n        setVisibleApp(false);\r\n        html.classList.remove(\"fixed\");\r\n      }}>\r\n      <div className=\"popup-app__block\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"popup-app__close\" id=\"category\" type=\"button\"\r\n          onClick={() => {\r\n            setVisibleApp(false);\r\n            html.classList.remove(\"fixed\");\r\n          }}/>\r\n        <p className=\"popup-app__slogan\">Удобнее искать знания в приложении</p>\r\n        <p className=\"popup-app__text\">\r\n          Скачайте мобильное приложение Sokrat., чтобы иметь самый быстрый доступ к новым курсам.\r\n        </p>\r\n        <div className=\"popup-app__links\">\r\n          <a className=\"popup-app__link\" href=\"https://apps.apple.com/ru/app/sokrat/id1548987952\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img className=\"popup-app__img popup-app__img--store\" src=\"/img/popup/app-store-btn.svg\" alt=\"Скачать с App Store\" width={200} height={67} />\r\n          </a>\r\n          <a className=\"popup-app__link\" href=\"https://play.google.com/store/apps/details?id=space.jscorp.sokrat\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img className=\"popup-app__img popup-app__img--google\" src=\"/img/popup/google-play-btn.svg\" alt=\"Скачать Google Play\" width={247} height={67} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopUpApp.propTypes = {\r\n  visibleApp: PropTypes.bool.isRequired,\r\n  setVisibleApp: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { AppRoute } from '../../const';\r\n// import Download from '../download/download';\r\nimport Search from '../search/search';\r\n// import styles from './header.module.css';\r\nimport logo from '../../img/sokrat-logo.svg';\r\nimport bookmarkIcon from '../../img/list.svg';\r\nimport cameraIcon from '../../img/camera-icon.svg';\r\nimport PopUpCompare from '../popup-compare/popup-compare';\r\nimport PopUpApp from '../popup-app/popup-app';\r\n\r\nexport function Header() {\r\n  const [ visiblePopUpCompare, setVisiblePopUpCompare ] = useState();\r\n  const [ visiblePopUpApp, setVisiblePopUpApp ] = useState();\r\n\r\n  return (\r\n    <>\r\n      <header className='header'>\r\n        <div className='top-bar'>\r\n          <p className='top-bar__content'>\r\n            Ищите знания\r\n            <br />в приложении Sokrat.\r\n          </p>\r\n          {/*<Download className={styles.download} isTitleVisible={false} />*/}\r\n          <button className=\"btn btn--pink\" id=\"app\" onClick={() => setVisiblePopUpApp(true)}>Скачать</button>\r\n        </div>\r\n\r\n        <div className='header__wrapper'>\r\n          <div className='header__inner-wrapper'>\r\n            <div className='logo'>\r\n              <Link to={AppRoute.ROOT} className='logo__link'>\r\n                <img\r\n                  src={logo}\r\n                  alt='Sokrat Logo'\r\n                  className='logo__img'\r\n                  width='157'\r\n                  height='36'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <Search />\r\n            <div className='user'>\r\n              <div className='user__bookmark' onClick={() => setVisiblePopUpCompare(true)}>\r\n                <img\r\n                  src={bookmarkIcon}\r\n                  alt=''\r\n                  className='user__bookmark-img'\r\n                  width='16'\r\n                  height='21'\r\n                />\r\n                {/*<span className='user__bookmark-indicator'></span>*/}\r\n              </div>\r\n              <div className='user__login'>\r\n                <p className='user__greeting'>\r\n                  Привет, <span className='user__name'>Друг</span>\r\n                </p>\r\n                <p className='user__text'>Что нового узнаем сегодня?</p>\r\n              </div>\r\n              <div className='user__photo'>\r\n                <img\r\n                  src={cameraIcon}\r\n                  alt=''\r\n                  className='user__photo-img'\r\n                  width='16'\r\n                  height='14'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main-nav'>\r\n          <nav className='main-nav__wrapper'>\r\n            <ul className='main-nav__list'>\r\n              <li className='main-nav__item'>\r\n                <NavLink\r\n                  to={AppRoute.COURSES}\r\n                  className='main-nav__link'\r\n                  activeClassName='main-nav__link--active'\r\n                  exact\r\n                >\r\n                  Все курсы\r\n                </NavLink>\r\n              </li>\r\n              <li className='main-nav__item'>\r\n                <NavLink\r\n                  to={AppRoute.PRACTICE}\r\n                  className='main-nav__link'\r\n                  activeClassName='main-nav__link--active'\r\n                  exact\r\n                >\r\n                  Вакансии\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <PopUpCompare\r\n        visible={visiblePopUpCompare}\r\n        setVisible={setVisiblePopUpCompare}\r\n        content=''\r\n      />\r\n      <PopUpApp\r\n        visibleApp={visiblePopUpApp}\r\n        setVisibleApp={setVisiblePopUpApp}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Footer } from '../footer/footer';\r\nimport { Header } from '../header/header';\r\n\r\nfunction PageLayout({ children }) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className='main'>\r\n        {children}\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nPageLayout.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\nimport Message from '../message/message';\r\nimport PageLayout from '../page-layout/page-layout';\r\n\r\nconst MESSAGE = 'Страница в разработке';\r\n\r\nfunction UnderConstructionPage() {\r\n  return (\r\n    <PageLayout>\r\n      <Message\r\n        message={MESSAGE}\r\n        isButtonVisible={false}\r\n      />\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default UnderConstructionPage;\r\n","import React from 'react';\r\nimport UnderConstructionPage from '../under-construction-page/under-construction-page';\r\n\r\nfunction CategoriesPage() {\r\n  return (\r\n    <UnderConstructionPage />\r\n  );\r\n}\r\n\r\nexport default CategoriesPage;\r\n","import React from 'react';\r\nimport UnderConstructionPage from '../under-construction-page/under-construction-page';\r\n\r\nfunction CoursesByCategoryPage() {\r\n  return (\r\n    <UnderConstructionPage />\r\n  );\r\n}\r\n\r\nexport default CoursesByCategoryPage;\r\n","/* eslint-disable */\r\nlet requested = [];\r\n\r\nexport const fetchData = async (slugs) => {\r\n  console.clear();\r\n  let requestArr = [];\r\n  let request = {};\r\n  let done = false;\r\n  let delay = 0;\r\n\r\n  // request разные должны быть - переносится error true\r\n\r\n  return await new Promise((resolve, reject) => {\r\n\r\n    for (let key in slugs) {\r\n      delay += 700;\r\n      request.data = null;\r\n      // request.isLoading = true;\r\n      // request.error = false;\r\n\r\n      setTimeout(async () => {\r\n        console.log('Запрос ' + key);\r\n        // console.time(key)\r\n        await fetch('https://sokratapp.ru/wp-json/wp/v2/' + slugs[key])\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status < 300) {\r\n            return res;\r\n          } else {\r\n            let error = new Error(res.statusText);\r\n            error.response = res;\r\n            console.log(title);\r\n            console.log(error);\r\n          }\r\n        })\r\n        .then((response) => response.json())\r\n        .then(posts => {\r\n          // console.timeEnd(key);\r\n          // console.log(posts);\r\n          request.data = posts;\r\n        })\r\n        .catch((e) => {\r\n          // request.error = true;\r\n          reject();\r\n        });\r\n        // console.log(request);\r\n        requestArr[key] = {...request};\r\n\r\n        if(Object.keys(requestArr).length === Object.keys(slugs).length) {\r\n          done = true;\r\n          console.log('All request done!');\r\n          resolve(requestArr);\r\n        };\r\n      }, delay);\r\n    };\r\n  })\r\n  .then(\r\n    result => {return result},\r\n    error => {return {error: true}}\r\n  );\r\n}","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst WIDTH_PX = 1440;\r\nconst HEIGHT_PX = 534;\r\nconst BACKGROUND_COLOR = '#f3f3f3';\r\nconst FOREGROUND_COLOR = '#ecebeb';\r\nconst SPEED_IN_SECONDS = 1;\r\n\r\nfunction MainSliderLoader(props) {\r\n  return (\r\n    <ContentLoader\r\n      speed={SPEED_IN_SECONDS}\r\n      width={WIDTH_PX}\r\n      height={HEIGHT_PX}\r\n      viewBox={`0 0 ${WIDTH_PX} ${HEIGHT_PX}`}\r\n      backgroundColor={BACKGROUND_COLOR}\r\n      foregroundColor={FOREGROUND_COLOR}\r\n      {...props}\r\n    >\r\n      <rect width={WIDTH_PX} height={HEIGHT_PX} />\r\n    </ContentLoader>);\r\n}\r\n\r\nexport default MainSliderLoader;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const partner = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  logo: PropTypes.string.isRequired,\r\n});\r\n\r\nexport const category = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  pictogram: PropTypes.string.isRequired,\r\n});\r\n\r\nexport const campaign = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  banner: PropTypes.string.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n});\r\n","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Pagination, Autoplay } from 'swiper';\r\nimport PropTypes from 'prop-types';\r\nimport MainSliderLoader from '../main-slider-loader/main-slider-loader';\r\nimport 'swiper/swiper.min.css';\r\nimport 'swiper/components/pagination/pagination.min.css';\r\n// import './main-slider.css';\r\nimport { campaign } from '../../types/prop-types';\r\n\r\nconst SPACE_BETWEEN_SLIDES_IN_PX = 20;\r\nconst AUTOPLAY_DELAY_IN_MS = 5000;\r\nconst IMG_WIDTH_IN_PX = 700;\r\nconst IMG_HEIGHT_IN_PX = 450;\r\n\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\nexport function MainSlider({ campaigns, isLoading }) {\r\n\r\n  const [visiblePromoPopUp, setVisiblePromoPopUp] = useState(false);\r\n  const [contentPromoPopUp, setContentPromoPopUp] = useState(null);\r\n  let content;\r\n\r\n  if (!campaigns) {\r\n    content = <MainSliderLoader />;\r\n  } else {\r\n    content = (\r\n      <>\r\n        <Swiper\r\n          className='main-page-swiper__swiper'\r\n          slidesPerView='auto'\r\n          spaceBetween={SPACE_BETWEEN_SLIDES_IN_PX}\r\n          pagination={{\r\n            el: '.main-page-swiper__pagination',\r\n            clickable: true,\r\n          }}\r\n          autoplay={{\r\n            delay: AUTOPLAY_DELAY_IN_MS,\r\n          }}\r\n        >\r\n          {campaigns.map((contentPromo) => (\r\n            <SwiperSlide className='main-page-swiper__swiper-wrapper' key={contentPromo.id}>\r\n              <div\r\n              className=\"main-page-swiper__swiper-slide\"\r\n              style={{\r\n                'background-image': `url(\"${contentPromo.picture_promo}\")`,\r\n              }}\r\n              onClick={() => {\r\n                  setContentPromoPopUp(contentPromo);\r\n                  setVisiblePromoPopUp(true);\r\n                }}\r\n              />\r\n              {/*<div className='main-slider__link'>\r\n                <img\r\n                  className='main-slider__img'\r\n                  src={contentPromo.picture_promo}\r\n                  alt=''\r\n                  width={IMG_WIDTH_IN_PX}\r\n                  height={IMG_HEIGHT_IN_PX}\r\n                  onClick={() => {\r\n                    setContentPromoPopUp(contentPromo);\r\n                    setVisiblePromoPopUp(true);\r\n                  }}\r\n                />\r\n              </div>*/}\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n\r\n        <div className='main-page-swiper__pagination swiper-pagination' />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className='main-page-swiper'>\r\n      <div className='main-page-swiper__wrapper'>\r\n        {/*<h1 className='visually-hidden'>Sokrat — Тысячи знаний внутри</h1>*/}\r\n        {content}\r\n        <MainSliderPopUp\r\n          visible={visiblePromoPopUp}\r\n          setVisible={setVisiblePromoPopUp}\r\n          contentPromo={contentPromoPopUp}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction MainSliderPopUp({visible, setVisible, contentPromo}) {\r\n  console.log(contentPromo);\r\n  return (\r\n    <section className={visible ? 'popup-promotion' : 'popup-promotion popup-promotion--hidden'} onClick={() => setVisible(false)}>\r\n      <div className=\"popup-promotion__block\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"popup-promotion__close\" type=\"button\" onClick={() => setVisible(false)}/>\r\n        {visible &&\r\n          <>\r\n            <img className=\"popup-promotion__img\" src={contentPromo.picture_promo} alt=\"\" />\r\n            <div className=\"popup-promotion__info\">\r\n              <p className=\"popup-promotion__slogan\">{contentPromo.title}</p>\r\n              <p className=\"popup-promotion__text\">{contentPromo.content}</p>\r\n              <p className=\"popup-promotion__title\">Партнер акции</p>\r\n              <div className=\"popup-promotion__partner\">\r\n                <div className=\"popup-promotion__partner__img\">\r\n                  <img src={contentPromo.sokrat_learn_partner.learn_partner_png} alt=\"\" />\r\n                </div>\r\n                {contentPromo.sokrat_learn_partner.post_title}\r\n              </div>\r\n              <p className=\"popup-promotion__title\">Купон</p>\r\n              <div className=\"popup-promotion__code\">{contentPromo.coupon_promo}</div>\r\n              <a className=\"popup-promotion__button btn\" href={contentPromo.link_promolink_promo} target=\"_blank\" rel=\"noopener noreferrer\">Перейти</a>\r\n            </div>\r\n          </>}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nMainSlider.propTypes = {\r\n  campaigns: PropTypes.arrayOf(campaign),\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nMainSlider.defaultProps = {\r\n  campaigns: [],\r\n};\r\n\r\nMainSliderPopUp.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  setVisible: PropTypes.func.isRequired,\r\n  contentPromo: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DEFAULT_SLIDES_COUNT = 5;\r\nconst IMG_WIDTH_IN_PX = 190;\r\nconst IMG_HEIGHT_IN_PX = 190;\r\nconst SLIDES_HORIZONTAL_GAP_IN_PX = 27;\r\nconst SLIDES_START_X_IN_PX = 0;\r\nconst SLIDES_START_Y_IN_PX = 0;\r\nconst TEXT_LINE_HEIGHT_IN_PX = 20;\r\nconst FIRST_TEXT_LINE_Y_IN_PX = 200;\r\nconst SECOND_TEXT_LINE_Y_IN_PX = 230;\r\nconst BORDER_RADIUS_IN_PX = 20;\r\n\r\nfunction CategoryListLoader(props) {\r\n  const slides = Array(DEFAULT_SLIDES_COUNT).fill(null);\r\n\r\n  return (\r\n    <ContentLoader\r\n      speed={1}\r\n      width={1109}\r\n      height={260}\r\n      viewBox=\"0 0 1109 260\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n      {...props}\r\n    >\r\n      {slides.map(( _, index) => {\r\n        const startXInPx = SLIDES_START_X_IN_PX + (IMG_WIDTH_IN_PX + SLIDES_HORIZONTAL_GAP_IN_PX) * index;\r\n\r\n        return (\r\n          <React.Fragment key={`slide_${startXInPx}_${SLIDES_START_Y_IN_PX}`}>\r\n            <rect\r\n              x={startXInPx}\r\n              y={SLIDES_START_Y_IN_PX}\r\n              rx={BORDER_RADIUS_IN_PX}\r\n              ry={BORDER_RADIUS_IN_PX}\r\n              width={IMG_WIDTH_IN_PX}\r\n              height={IMG_HEIGHT_IN_PX}\r\n            />\r\n            <rect\r\n              x={startXInPx}\r\n              y={FIRST_TEXT_LINE_Y_IN_PX}\r\n              rx=\"0\"\r\n              ry=\"0\"\r\n              width={IMG_WIDTH_IN_PX}\r\n              height={TEXT_LINE_HEIGHT_IN_PX}\r\n            />\r\n            <rect\r\n              // Second text line must be centered\r\n              x={startXInPx + IMG_WIDTH_IN_PX / 4}\r\n              y={SECOND_TEXT_LINE_Y_IN_PX}\r\n              rx=\"0\"\r\n              ry=\"0\"\r\n              width={IMG_WIDTH_IN_PX / 2}\r\n              height={TEXT_LINE_HEIGHT_IN_PX}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </ContentLoader>\r\n  );\r\n}\r\n\r\nexport default CategoryListLoader;\r\n","// Trim character from start and end in the given string\r\nexport const trimChar = (inputString, char) => {\r\n  if (typeof inputString !== 'string' || typeof char !== 'string') {return inputString;}\r\n\r\n  if (inputString && inputString[0] === char) {\r\n    inputString = inputString.slice(1);\r\n  }\r\n\r\n  if (inputString && inputString[inputString.length - 1] === char) {\r\n    inputString = inputString.slice(0, inputString.length - 1);\r\n  }\r\n\r\n  return inputString;\r\n};\r\n\r\nexport const generateAppRoute = (appRoute, appRouteEnding) => `/${appRoute.split('/')[1]}/${encodeURI(appRouteEnding)}`;\r\n","// /* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PopUpCategory({visible, setVisible, categories}) {\r\n  return (\r\n    categories &&\r\n    <section className={visible ? 'popup-category' : 'popup-category popup-category--hidden'} onClick={() => setVisible(false)}>\r\n      <div className=\"popup-category__block\" onClick={(e) => e.stopPropagation() }>\r\n        <h2 className=\"popup-category__title\">Выберите темы, которые вам интересны</h2>\r\n        <button className=\"popup-category__close\" type=\"button\" onClick={() => setVisible(false)} />\r\n        <ul className=\"popup-category__list\">\r\n          {categories.map((category, i) => {\r\n            const { slug, name, id } = category;\r\n            return (\r\n              <li className=\"popup-category__item cursor-pointer\" key={id}>\r\n                <input className=\"popup-category__input cursor-pointer\" id={slug} type=\"checkbox\" name=\"category\" />\r\n                <label className=\"popup-category__label\" htmlFor={slug} />\r\n                <p className=\"popup-category__text\">{name}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopUpCategory.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  setVisible: PropTypes.func.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { category } from '../../types/prop-types';\r\nimport CategoryListLoader from '../category-list-loader/category-list-loader';\r\nimport SwiperCore, { Virtual } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.min.css';\r\nimport { AppRoute } from '../../const';\r\nimport { generateAppRoute } from '../../utils/util';\r\nimport styles from './category-list.module.css';\r\nimport PopUpCategory from '../popup-category/popup-category';\r\n\r\nconst SLIDES_PER_VIEW = 6;\r\nconst IMG_WIDTH_IN_PX = 193;\r\nconst IMG_HEIGHT_IN_PX = 193;\r\n\r\nSwiperCore.use([Virtual]);\r\n\r\n// TODO Error state\r\nexport function CategoryList({ categories, isLoading }) {\r\n  // if(!categories) return null;\r\n\r\n  // const { ids, entities } = categories;\r\n  // if (!ids.length && !isLoading) {return null;}\r\n  // console.log(entities);\r\n  let content = null;\r\n\r\n  const [ visibleAllCategory, setVisibleAllCategory ] = useState(false);\r\n\r\n  const reInitSwiper = (swiper) => setTimeout(() => swiper.update());\r\n\r\n  if (!categories) {\r\n    content = <CategoryListLoader />;\r\n  } else {\r\n    content = (\r\n      <Swiper\r\n        slidesPerView={SLIDES_PER_VIEW}\r\n        spaceBetween={22}\r\n        freeMode\r\n        virtual={{\r\n          cache: true,\r\n          addSlidesAfter: SLIDES_PER_VIEW,\r\n          addSlidesBefore: SLIDES_PER_VIEW,\r\n        }}\r\n        // Reinitialise swiper right after first initialisation.\r\n        // Otherwise virtual mode will ignore slidesPerView.\r\n        onInit={reInitSwiper}\r\n        className='block-filter__list block-filter__list--user-categories'\r\n      >\r\n        {/*{ids.map((id, arrayIndex) => {\r\n          const routePath = generateAppRoute(AppRoute.COURSES_BY_CATEGORY, entities[id].title);\r\n          // console.log(`https://sokratapp.ru/wp-json/wp/v2/media/${entities[id].pictogram}`);\r\n\r\n          return (\r\n            <SwiperSlide key={id} virtualIndex={arrayIndex}>\r\n              <div className='category__item' key={id}>\r\n                <Link to={routePath} className='category__img-link'>\r\n                  <img\r\n                    src={entities[id].pictogram}\r\n                    alt={entities[id].title}\r\n                    className={`category__img ${styles.CategoryImg}`}\r\n                    width={IMG_WIDTH_IN_PX}\r\n                    height={IMG_HEIGHT_IN_PX}\r\n                  />\r\n                </Link>\r\n                <p className='category__item-title'>\r\n                  <Link to='#' className='category__title-link'>\r\n                    {entities[id].title}\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </SwiperSlide>);\r\n        })}*/}\r\n        {categories.map((category, arrayIndex) => {\r\n          const routePath = generateAppRoute(AppRoute.COURSES_BY_CATEGORY, category.name);\r\n\r\n          return (\r\n            <SwiperSlide key={category.id} virtualIndex={arrayIndex} className=\"block-filter__item swiper-slide\">\r\n              <input className=\"block-filter__input cursor-pointer\" type=\"checkbox\" name=\"filter-category\" value={category.name} />\r\n              <label className=\"block-filter__label block-filter__label--user-categories  cursor-pointer\" htmlFor=\"blockchain\">\r\n                <picture>\r\n                  <source media=\"(max-width: 768px)\" srcSet=\"img/delete/category-placeholder-mobile.jpg\" />\r\n                  <img className=\"block-filter__img\" src=\"img/delete/category-placeholder.jpg\" width=\"193px\" height=\"193px\" alt=\"\" />\r\n                </picture>\r\n                <span className=\"block-filter__name block-filter__name--user-categories\">{category.name}</span>\r\n              </label>\r\n\r\n              {/*<div className='category__item' key={category.id}>\r\n                <Link to={routePath} className='category__img-link'>\r\n                  <img\r\n                    src={category.pictogram}\r\n                    alt={category.name}\r\n                    className={`category__img ${styles.CategoryImg}`}\r\n                    width={IMG_WIDTH_IN_PX}\r\n                    height={IMG_HEIGHT_IN_PX}\r\n                  />\r\n                </Link>\r\n                <p className='category__item-title'>\r\n                  <Link to='#' className='category__title-link'>\r\n                    {category.name}\r\n                  </Link>\r\n                </p>\r\n              </div>*/}\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='block-filter block-filter--user-categories'>\r\n        <div className='block-filter__wrapper'>\r\n          <div className='block-filter__header'>\r\n            <h2 className='block-filter__title block-filter__title--user-categories'>Мои категории</h2>\r\n            <div className='block-filter__all-link cursor-pointer' onClick={() => setVisibleAllCategory(true)}>\r\n              Посмотреть все\r\n            </div>\r\n          </div>\r\n          {content}\r\n        </div>\r\n      </section>\r\n      <PopUpCategory\r\n        visible={visibleAllCategory}\r\n        setVisible={setVisibleAllCategory}\r\n        categories={categories}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nCategoryList.propTypes = {\r\n  categories: PropTypes\r\n    .shape({\r\n      ids: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n      entities: PropTypes.shape({\r\n        [PropTypes.string]: category,\r\n      }).isRequired,\r\n    })\r\n    .isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nCategoryList.defaultProps = {\r\n  categories: { ids: [], entities: {}},\r\n};\r\n","import React from 'react';\r\nimport appStoreImage from '../../img/app-store-btn.svg';\r\nimport googlePlayImage from '../../img/google-play-btn.svg';\r\n\r\nexport function MobileAppInfo() {\r\n  return (\r\n    <section className='cta'>\r\n      <div className='container'>\r\n        <h2 className='visually-hidden'>\r\n          Скачайте приложение Sokrat в Google play или App Store\r\n        </h2>\r\n        <div className='cta__wrapper'>\r\n          <div className='cta__content-wrapper'>\r\n            <p className='cta__title'>Удобнее искать знания в приложении</p>\r\n            <p className='cta__text'>\r\n              Скачайте мобильное приложение Sokrat., чтобы иметь самый быстрый\r\n              доступ к новым курсам.\r\n            </p>\r\n\r\n            <div className='cta__download-btn'>\r\n              <a\r\n                href='https://apps.apple.com/ru/app/sokrat/id1548987952'\r\n                className='cta__download-btn-link cta__download-btn-link--appstore'\r\n              >\r\n                <img\r\n                  src={appStoreImage}\r\n                  alt='Скачать с App Store'\r\n                  className='cta__btn-appstore-img'\r\n                  width='135'\r\n                  height='45'\r\n                />\r\n              </a>\r\n\r\n              <a\r\n                href='https://play.google.com/store/apps/details?id=space.jscorp.sokrat&hl=ru&gl=US'\r\n                className='cta__download-btn-link cta__download-btn-link--gplay'\r\n              >\r\n                <img\r\n                  src={googlePlayImage}\r\n                  alt='Скачать Google Play'\r\n                  className='cta__btn-gplay-img'\r\n                  width='152'\r\n                  height='45'\r\n                />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { useGetCoursesQuery } from '../../store/api/courses-slice';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Virtual } from 'swiper';\r\nimport styles from './offers-list.module.css';\r\nimport 'swiper/swiper.min.css';\r\nimport classNames from 'classnames';\r\nimport NumberFormat from 'react-number-format';\r\nimport { fetchData } from '../../store/api/fetch-custom';\r\n\r\nimport { AppRoute } from '../../const';\r\nimport { generateAppRoute } from '../../utils/util';\r\n\r\n\r\n// const SLIDER_OFFSET_IN_PX = 0;\r\n// const SLIDERS_SPACE_BETWEEN_IN_PX = 30;\r\n// const SLIDES_PER_VIEW = 4;\r\n// const IMG_WIDTH_IN_PX = 282;\r\n// const IMG_HEIGHT_IN_PX = 282;\r\n\r\nSwiperCore.use([Navigation, Virtual]);\r\n\r\nfunction OffersList(props) {\r\n  const {\r\n    title,\r\n    // offersIds,\r\n    mainCourses,\r\n    componentId,\r\n    slidesPerView,\r\n    navigation,\r\n    sliderWidthAuto,\r\n  } = props;\r\n\r\n  const componentUniqClassName = `offers-list-${componentId}`;\r\n\r\n  const reInitSwiper = (swiper) => setTimeout(() => swiper.update());\r\n  // const { entities } = courses;\r\n\r\n  // const content = offersIds\r\n  //   // Do not show ids which are not present in courses\r\n  //   .filter((offerId) => entities[offerId])\r\n  //   .map((offerId, arrayIndex) => {\r\n  //     const offer = entities[offerId];\r\n\r\n  //     return (\r\n  //       <SwiperSlide\r\n  //         className={styles.SwiperSlide}\r\n  //         key={offerId}\r\n  //         virtualIndex={arrayIndex}\r\n  //       >\r\n  //         <div className='carousel__item'>\r\n  //           <div className='carousel__img-link'>\r\n  //             <img\r\n  //               className={`carousel__img ${styles.CarouselImg}`}\r\n  //               src={offer.logo}\r\n  //               alt=''\r\n  //               width={IMG_WIDTH_IN_PX}\r\n  //               height={IMG_HEIGHT_IN_PX}\r\n  //             />\r\n  //             <div className='carousel__item-info'>\r\n  //               <p className='carousel__item-price'><NumberFormat value={offer.price} displayType={'text'} thousandSeparator=\" \" suffix=\" ₽\" /></p>\r\n  //               <p className='carousel__item-duration'>{offer.duration}</p>\r\n  //             </div>\r\n  //             <p className='carousel__item-title'>\r\n  //               {offer.title}\r\n  //             </p>\r\n  //           </div>\r\n  //           <a href={offer.link} className='carousel__item-btn'>\r\n  //             Подробнее\r\n  //           </a>\r\n  //         </div>\r\n  //       </SwiperSlide>\r\n  //     );\r\n  //   });\r\n\r\n  const content = mainCourses.map((data, arrayIndex) => {\r\n    // console.log(data);\r\n    const routePath = generateAppRoute(AppRoute.COURSES, data.post_name);\r\n    return (\r\n      <SwiperSlide\r\n        className={styles.SwiperSlide}\r\n        key={data.ID}\r\n        virtualIndex={arrayIndex}\r\n      >\r\n        <div className=\"carousel__item carousel__item--main-page\">\r\n          <a className=\"carousel__img-link\" href={routePath}>\r\n            <picture>\r\n              <source media=\"(max-width: 768px)\" srcSet=\"/img/delete/slider-placeholder-mobile.jpg\" />\r\n              <img className=\"carousel__img carousel__img--main-page\" src=\"/img/delete/slider-placeholder.jpg\" alt=\"\" />\r\n            </picture>\r\n            <div className=\"carousel__item-info carousel__item-info--main-page\">\r\n              <p className=\"carousel__item-price carousel__item-price--main-page\"><NumberFormat value='700000' displayType={'text'} thousandSeparator=\" \" suffix=\" руб.\" /></p>\r\n              <p className=\"carousel__item-duration carousel__item-duration--main-page\">{data.ID}</p>\r\n            </div>\r\n            <p className=\"carousel__item-title carousel__item-title--main-page\">{data.post_title}</p>\r\n          </a>\r\n          <a href={routePath} className=\"carousel__item-btn carousel__item-btn--main-page\">Подробнее</a>\r\n        </div>\r\n\r\n        {/*<div className='carousel__item'>\r\n          <div className='carousel__img-link'>\r\n            <img\r\n              className={`carousel__img ${styles.CarouselImg}`}\r\n              src=''\r\n              alt=''\r\n              width={IMG_WIDTH_IN_PX}\r\n              height={IMG_HEIGHT_IN_PX}\r\n            />\r\n            <div className='carousel__item-info'>\r\n              <p className='carousel__item-price'><NumberFormat value='700000' displayType={'text'} thousandSeparator=\" \" suffix=\" ₽\" /></p>\r\n              <p className='carousel__item-duration'>{data.ID}</p>\r\n            </div>\r\n            <p className='carousel__item-title'>\r\n              {data.post_title}\r\n            </p>\r\n          </div>\r\n          <a href={`/courses/${data.post_name}`} className='carousel__item-btn'>\r\n            Подробнее\r\n          </a>\r\n        </div>*/}\r\n      </SwiperSlide>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <section className={classNames(`carousel carousel--full ${componentUniqClassName}`, {\r\n      [styles.Carousel]: sliderWidthAuto,\r\n    })}\r\n    >\r\n      <div className='carousel__wrapper'>\r\n        <h2 className='carousel__title'>{title}</h2>\r\n        <div className={`carousel__list ${styles.CarouselList}`}>\r\n          <Swiper\r\n            navigation={{\r\n              nextEl: `.${componentUniqClassName} .carousel__btn-next`,\r\n              prevEl: `.${componentUniqClassName} .carousel__btn-prev`,\r\n            }}\r\n            // slidesPerView={slidesPerView}\r\n            // slidesOffsetAfter={0}\r\n            // slidesOffsetBefore={0}\r\n            spaceBetween={21}\r\n            freeMode\r\n            grabCursor\r\n            // virtual={{\r\n            //   cache: true,\r\n            //   addSlidesAfter: slidesPerView,\r\n            //   addSlidesBefore: slidesPerView,\r\n            // }}\r\n            breakpoints={{\r\n              1111: {\r\n                slidesPerView: slidesPerView,\r\n              },\r\n              816: {\r\n                slidesPerView: 3,\r\n              },\r\n              509: {\r\n                slidesPerView: 2,\r\n              },\r\n              0: {\r\n                slidesPerView: 1.5,\r\n                // spaceBetween: 15,\r\n              },\r\n            }}\r\n            // Reinitialise swiper right after first initialisation.\r\n            // Otherwise virtual mode will ignore slidesPerView.\r\n            onInit={reInitSwiper}\r\n          >\r\n            {content}\r\n          </Swiper>\r\n          <div className={navigation ? 'carousel__btn-next' : 'carousel__btn-next hidden'}></div>\r\n          <div className={navigation ? 'carousel__btn-prev' : 'carousel__btn-prev hidden'}></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nOffersList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  offersIds: PropTypes.arrayOf(PropTypes.number),\r\n  componentId: PropTypes.string.isRequired,\r\n  sliderWidthAuto: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default OffersList;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DEFAULT_SLIDES_COUNT = 6;\r\nconst SLIDE_WIDTH_IN_PX = 190;\r\nconst SLIDE_HEIGHT_IN_PX = 190;\r\nconst SLIDES_HORIZONTAL_GAP_IN_PX = 35;\r\nconst SLIDES_START_X_IN_PX = 0;\r\nconst SLIDES_START_Y_IN_PX = 20;\r\n\r\nfunction PartnersLoader(props) {\r\n  const slides = Array(DEFAULT_SLIDES_COUNT).fill(null);\r\n\r\n  return (\r\n    <ContentLoader\r\n      speed={1}\r\n      width={1440}\r\n      height={230}\r\n      viewBox=\"0 0 1440 230\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n      {...props}\r\n    >\r\n      {slides.map(( _, index) => {\r\n        const startXInPx = SLIDES_START_X_IN_PX + (SLIDE_WIDTH_IN_PX + SLIDES_HORIZONTAL_GAP_IN_PX) * index;\r\n\r\n        return (\r\n          <rect\r\n            key={`slide_${startXInPx}_${SLIDES_START_Y_IN_PX}`}\r\n            x={startXInPx}\r\n            y={SLIDES_START_Y_IN_PX}\r\n            rx=\"0\"\r\n            ry=\"0\"\r\n            width={SLIDE_WIDTH_IN_PX}\r\n            height={SLIDE_HEIGHT_IN_PX}\r\n          />\r\n        );\r\n      })}\r\n    </ContentLoader>\r\n  );\r\n}\r\n\r\nexport default PartnersLoader;\r\n","/* eslint-disable */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { partner } from '../../types/prop-types';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Virtual } from 'swiper';\r\nimport styles from './partners.module.css';\r\nimport 'swiper/swiper.min.css';\r\nimport PartnersLoader from '../partners-loader/partners-loader';\r\nimport { generateAppRoute } from '../../utils/util';\r\nimport { AppRoute } from '../../const';\r\n\r\nconst SLIDES_PER_VIEW = 4;\r\nconst SLIDER_OFFSET_IN_PX = 10;\r\nconst IMG_WIDTH_IN_PX = 193;\r\nconst IMG_HEIGHT_IN_PX = 193;\r\n\r\nSwiperCore.use([Navigation, Virtual]);\r\n\r\n// TODO Loading/Error state\r\n\r\nexport function Partners(props) {\r\n  const { title, partners, isLoading, componentId } = props;\r\n  // const { ids, entities } = partners;\r\n  // console.log(partners);\r\n  const componentUniqClassName = `partners-${componentId}`;\r\n  let content = null;\r\n  const reInitSwiper = (swiper) => setTimeout(() => swiper.update());\r\n\r\n  if (!partners) {\r\n    content = <PartnersLoader />;\r\n  } else if (!partners.length) {\r\n    return null;\r\n  } else {\r\n    content = (\r\n      <>\r\n        <Swiper\r\n          navigation={{\r\n            nextEl: `.${componentUniqClassName} .partners__btn-next`,\r\n          }}\r\n          // slidesOffsetAfter={SLIDER_OFFSET_IN_PX}\r\n          // slidesOffsetBefore={SLIDER_OFFSET_IN_PX}\r\n          spaceBetween={21}\r\n          freeMode\r\n          virtual={{\r\n            cache: true,\r\n            addSlidesAfter: SLIDES_PER_VIEW,\r\n            addSlidesBefore: SLIDES_PER_VIEW,\r\n          }}\r\n          breakpoints={{\r\n            1111: {\r\n              slidesPerView: SLIDES_PER_VIEW,\r\n            },\r\n            816: {\r\n              slidesPerView: 3,\r\n            },\r\n            509: {\r\n              slidesPerView: 2,\r\n            },\r\n            0: {\r\n              slidesPerView: 1.5,\r\n              // spaceBetween: 15,\r\n            },\r\n          }}\r\n          // Reinitialise swiper right after first initialisation.\r\n          // Otherwise virtual mode will ignore slidesPerView.\r\n          onInit={reInitSwiper}\r\n          className=\"compilations__swiper carousel__list\"\r\n        >\r\n          {/*{ids.map((id, arrayIndex) => {\r\n            const routePath = generateAppRoute(AppRoute.PARTNERS, id);\r\n\r\n            return (\r\n              <SwiperSlide\r\n                className={styles.SwiperSlide}\r\n                key={id}\r\n                virtualIndex={arrayIndex}\r\n              >\r\n                <div className={`partners__item ${styles.PartnersItem}`}>\r\n                  <Link to={routePath} className='partners__img-link'>\r\n                    {entities[id].logo\r\n                      ? (\r\n                        <img\r\n                          className={`partners__img ${styles.PartnersImg}`}\r\n                          src={entities[id].logo}\r\n                          alt={entities[id].title}\r\n                          width={IMG_WIDTH_IN_PX}\r\n                          height={IMG_HEIGHT_IN_PX}\r\n                        />)\r\n                      : entities[id].title}\r\n                  </Link>\r\n                </div>\r\n              </SwiperSlide>);\r\n          })}*/}\r\n          {partners.map((partner, arrayIndex) => {\r\n            const routePath = generateAppRoute(AppRoute.PARTNERS, partner.id);\r\n\r\n            return (\r\n              <SwiperSlide\r\n                // className={styles.SwiperSlide}\r\n                key={partner.id}\r\n                virtualIndex={arrayIndex}\r\n              >\r\n                <div className='carousel__item carousel__item--partners'>\r\n                  <a className=\"carousel__img-link carousel__img-link--partners\" href=\"#\">\r\n                    <picture>\r\n                      <source media=\"(max-width: 768px)\" srcSet=\"/img/delete/skillbox-logo-mobile.png\" />\r\n                      <img className=\"carousel__img carousel__img--partners\"\r\n                        src={partner.logo_svg}\r\n                        // src=\"/img/delete/skillbox-logo.png\"\r\n                        alt={partner.since} />\r\n                    </picture>\r\n                  </a>\r\n                </div>\r\n\r\n                {/*<div className={`partners__item ${styles.PartnersItem}`}>\r\n                  <Link to={routePath} className='partners__img-link'>\r\n                    {partner.logo_svg\r\n                      ? (\r\n                        <img\r\n                          className={`partners__img ${styles.PartnersImg}`}\r\n                          src={partner.logo_svg}\r\n                          alt={partner.since}\r\n                          width={IMG_WIDTH_IN_PX}\r\n                          height={IMG_HEIGHT_IN_PX}\r\n                        />)\r\n                      : partner.since}\r\n                  </Link>\r\n                </div>*/}\r\n              </SwiperSlide>);\r\n          })}\r\n          <div className='carousel__btn-next'></div>\r\n          <div className='carousel__btn-prev'></div>\r\n\r\n        </Swiper>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section\r\n      // className={`partners ${componentUniqClassName}`}\r\n      className='compilations__item compilations__item--partners carousel carousel--partners'\r\n    >\r\n      <div className='carousel__wrapper'>\r\n        <h2 className='carousel__title'>{title}</h2>\r\n        {content}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPartners.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  partners: PropTypes\r\n    .shape({\r\n      ids: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n      entities: PropTypes.shape({\r\n        [PropTypes.string]: partner,\r\n      }).isRequired,\r\n    })\r\n    .isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  componentId: PropTypes.string.isRequired,\r\n};\r\n\r\n// Partners.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import { trimChar } from './util';\r\nimport { DECIMAL_RADIX } from '../const';\r\n\r\nconst ID_COURSE_SEPARATOR = '/';\r\n\r\nexport const transformMainCategory = (category) => {\r\n  let adaptedCategory = null;\r\n\r\n  // Transform id_course from string '1/20/33/57' to array [1,20,33,57]\r\n  let { id_course: idCourse, slot } = category;\r\n\r\n  // Check if idCourse is non-empty string in '1/20/33/57' format\r\n  if (typeof idCourse === 'string' && /^(\\/*\\d+\\/*)+$/gm.test(idCourse)) {\r\n    idCourse = trimChar(idCourse.trim(), ID_COURSE_SEPARATOR)\r\n      .split('/')\r\n      .map((course) => parseInt(course, DECIMAL_RADIX));\r\n  } else {\r\n    idCourse = [];\r\n  }\r\n\r\n  // Transform slot field to number\r\n  slot = parseInt(slot, DECIMAL_RADIX);\r\n  // Set empty strings or something that is not\r\n  // a number to the end of the list.\r\n  if (Number.isNaN(slot)) {\r\n    slot = +Infinity;\r\n  }\r\n\r\n  adaptedCategory = {\r\n    ...category,\r\n    // Remove non-unique ids\r\n    coursesIds: [...new Set(idCourse)],\r\n    slot,\r\n  };\r\n\r\n  delete adaptedCategory.id_course;\r\n\r\n  return adaptedCategory;\r\n};\r\n\r\nexport const transformPracticePartner = (partner) => {\r\n  const transformedPartner = {\r\n    ...partner,\r\n    title: partner.title.rendered,\r\n  };\r\n\r\n  return transformedPartner;\r\n};\r\n","/* eslint-disable */\r\n\r\nimport { createEntityAdapter, createSelector } from '@reduxjs/toolkit';\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\nconst coursesAdapter = createEntityAdapter();\r\n\r\nexport const coursesSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getCourses: builder.query({\r\n      query: () => wordPressApiResourcePath.COURSES,\r\n      transformResponse: (response) => coursesAdapter.addMany(coursesAdapter.getInitialState(), response),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCoursesQuery } = coursesSlice;\r\n\r\nconst selectCoursesResult = coursesSlice.endpoints.getCourses.select();\r\n\r\nexport const selectAllCourses = createSelector(\r\n  selectCoursesResult,\r\n  (coursesResult) => coursesResult?.data ?? {},\r\n);\r\n","/* eslint-disable */\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { transformMainCategory } from '../../utils/api';\r\nimport { wordPressApi } from './word-press-api';\r\nimport { selectAllCourses } from './courses-slice';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const mainCategoriesSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getMainCategories: builder.query({\r\n      query: () => wordPressApiResourcePath.MAIN_CATEGORIES,\r\n      transformResponse: (response) => response\r\n        .map(transformMainCategory)\r\n      // Sort ascending base on slot field.\r\n      // First category in array will be placed in first slot\r\n      // on the main page and so on.\r\n        .sort(({ slot: slotA }, { slot: slotB }) => slotA - slotB),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetMainCategoriesQuery } = mainCategoriesSlice;\r\n\r\nconst selectMainCategoriesResult = mainCategoriesSlice.endpoints.getMainCategories.select();\r\n\r\nexport const selectAllMainCategories = createSelector(\r\n  selectMainCategoriesResult,\r\n  (result) => result?.data ?? [],\r\n);\r\n\r\n// Select all categories which has at least one actual course id\r\n// existed in courses slice\r\n// export const selectNonEmptyMainCategories = createSelector(\r\n//   selectAllMainCategories,\r\n//   selectAllCourses,\r\n//   (mainCategories, { entities }) => (\r\n//     mainCategories.filter(({ coursesIds }) => coursesIds.some((id) => entities?.[id]))\r\n//   ),\r\n// );\r\n","import { createEntityAdapter } from '@reduxjs/toolkit';\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\nconst partnersAdapter = createEntityAdapter();\r\n\r\nexport const partnersSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getPartners: builder.query({\r\n      query: () => wordPressApiResourcePath.PARTNERS,\r\n      transformResponse: (response) => partnersAdapter.addMany(partnersAdapter.getInitialState(), response),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetPartnersQuery } = partnersSlice;\r\n","import { createEntityAdapter } from '@reduxjs/toolkit';\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { transformPracticePartner } from '../../utils/api';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\nconst practicePartnersAdapter = createEntityAdapter();\r\n\r\nexport const practicePartnersSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getPracticePartners: builder.query({\r\n      query: () => wordPressApiResourcePath.PRACTICE_PARTNERS,\r\n      transformResponse: (response) => {\r\n        response = response.map(transformPracticePartner);\r\n        return practicePartnersAdapter.addMany(practicePartnersAdapter.getInitialState(), response);\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetPracticePartnersQuery } = practicePartnersSlice;\r\n","import { createEntityAdapter } from '@reduxjs/toolkit';\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\nconst categoriesAdapter = createEntityAdapter();\r\n\r\nexport const categoriesSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getCategories: builder.query({\r\n      query: () => wordPressApiResourcePath.CATEGORIES,\r\n      transformResponse: (response) => categoriesAdapter.addMany(categoriesAdapter.getInitialState(), response),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCategoriesQuery } = categoriesSlice;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './offers-list-loader.module.css';\r\nimport classNames from 'classnames';\r\nimport { Breakpoint } from '../../const';\r\n\r\nconst DEFAULT_WIDTH_IN_PX = Breakpoint.LARGE;\r\nconst DEFAULY_HEIGHT_IN_PX = 656;\r\nconst DEFAULT_SLIDES_COUNT = 4;\r\nconst SLIDE_WIDTH_IN_PX = 325;\r\nconst SLIDE_HEIGHT_IN_PX = 528;\r\nconst SLIDES_HORIZONTAL_GAP_IN_PX = 21;\r\nconst SLIDES_START_X_IN_PX = 40;\r\nconst SLIDES_START_Y_IN_PX = 178;\r\n\r\nfunction OffersListLoader({\r\n  slidesCount,\r\n  isWrapper,\r\n  width,\r\n  height,\r\n  ...props}) {\r\n  const slides = Array(slidesCount).fill(null);\r\n\r\n  return (\r\n    <ContentLoader\r\n      speed={1}\r\n      width={width}\r\n      height={height}\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n      className={classNames({ [styles.Wrapper]: isWrapper })}\r\n      {...props}\r\n    >\r\n      <rect x=\"0\" y=\"70\" rx=\"0\" ry=\"0\" width=\"300\" height=\"38\" />\r\n      {slides.map(( _, index) => {\r\n        const startXInPx = SLIDES_START_X_IN_PX + (SLIDE_WIDTH_IN_PX + SLIDES_HORIZONTAL_GAP_IN_PX) * index;\r\n\r\n        return (\r\n          <rect\r\n            key={`slide_${startXInPx}_${SLIDES_START_Y_IN_PX}`}\r\n            x={startXInPx}\r\n            y={SLIDES_START_Y_IN_PX}\r\n            rx=\"0\"\r\n            ry=\"0\"\r\n            width={SLIDE_WIDTH_IN_PX}\r\n            height={SLIDE_HEIGHT_IN_PX}\r\n          />);\r\n      })}\r\n    </ContentLoader>\r\n  );\r\n}\r\n\r\nOffersListLoader.propTypes = {\r\n  slidesCount: PropTypes.number.isRequired,\r\n  isWrapper: PropTypes.bool.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n};\r\n\r\nOffersListLoader.defaultProps = {\r\n  slidesCount: DEFAULT_SLIDES_COUNT,\r\n  isWrapper: false,\r\n  width: DEFAULT_WIDTH_IN_PX,\r\n  height: DEFAULY_HEIGHT_IN_PX,\r\n};\r\n\r\nexport default OffersListLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MainPageSidebar({ className }) {\r\n  // Do not show component until backend ready\r\n  // return null;\r\n\r\n  // Uncomment when backend ready\r\n  return (\r\n    <div className='block-sb-right__sidebar'>\r\n      <div className='banner'>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint\r\n            nisi id totam ex aliquid incidunt deleniti quasi, tempora porro\r\n            tempore et quaerat minima recusandae deserunt, rem labore\r\n            maiores culpa libero?\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainPageSidebar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default MainPageSidebar;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useCallback, useState } from 'react';\r\nimport { fetchData } from '../../store/api/fetch-custom';\r\nimport { wordPressApiResourcePath } from '../../const.jsx';\r\n\r\nimport { MainSlider } from '../main-slider/main-slider';\r\n// import { PopularOffers } from \"../popular-offers/popular-offers\";\r\nimport { CategoryList } from '../category-list/category-list';\r\nimport { MobileAppInfo } from '../mobile-app-info/mobile-app-info';\r\nimport OffersList from '../offers-list/offers-list';\r\nimport { Partners } from '../partners/partners';\r\nimport { selectNonEmptyMainCategories, useGetMainCategoriesQuery } from '../../store/api/main-categories-slice';\r\nimport { useSelector } from 'react-redux';\r\nimport { useGetPartnersQuery } from '../../store/api/partners-slice';\r\nimport { useGetPracticePartnersQuery } from '../../store/api/practice-partners-slice';\r\nimport { useGetCategoriesQuery } from '../../store/api/categories-slice';\r\nimport { nanoid } from 'nanoid';\r\n// import styles from './main-page.module.css';\r\n// import { useGetCoursesQuery } from '../../store/api/courses-slice';\r\nimport OffersListLoader from '../offers-list-loader/offers-list-loader';\r\nimport MainPageSidebar from '../main-page-sidebar/main-page-sidebar';\r\nimport { useGetCampaignsQuery } from '../../store/api/campaigns-slice';\r\nimport Message from '../message/message';\r\nimport PageLayout from '../page-layout/page-layout';\r\n\r\nconst SLOTS_NUMBER = 5;\r\n// Multiple instances of Swiper slider on the page requires\r\n// unique identification of the control elements(slider buttons).\r\n// Based on the unique components ids we can generate unique classnames\r\n// and then identify control elements with class selectors.\r\nconst PARTNERS_COMPONENT_ID = nanoid();\r\nconst PRACTICE_PARTNERS_COMPONENT_ID  = nanoid();\r\n\r\nconst FIRST_MAIN_COMPONENT_WIDTH = 1440;\r\nconst FIRST_MAIN_COMPONENT_SLIDES_PER_VIEW = 3;\r\n\r\nexport function MainPage() {\r\n  // console.clear();\r\n\r\n  // const {\r\n  //   data: campaigns,\r\n  //   isFetching: isCampaignsLoading,\r\n  //   isError: isCampaignsError,\r\n  //   refetch: refetchCampaigns,\r\n  // } = useGetCampaignsQuery();\r\n  // console.log(campaigns);\r\n\r\n  // const {\r\n  //   data: mainCategories,\r\n  //   isFetching: isMainCategoriesLoading,\r\n  //   isError: isMainCategoriesError,\r\n  //   refetch: refetchMainCategories,\r\n  // } = useGetMainCategoriesQuery();\r\n  // console.log(mainCategories);\r\n\r\n  // const {\r\n  //   data: categories,\r\n  //   isFetching: isCategoriesLoading,\r\n  //   isError: isCategoriesError,\r\n  //   refetch: refetchCategories,\r\n  // } = useGetCategoriesQuery();\r\n  // console.log(categories);\r\n\r\n  // const {\r\n  //   isFetching: isCoursesLoading,\r\n  //   isError: isCoursesError,\r\n  //   refetch: refetchCourses,\r\n  // } = useGetCoursesQuery();\r\n\r\n  // const {\r\n  //   data: partners,\r\n  //   isFetching: isPartnersLoading,\r\n  //   isError: isPartnersError,\r\n  //   refetch: refetchPartners,\r\n  // } = useGetPartnersQuery();\r\n  // console.log(partners);\r\n  // const {\r\n  //   data: practicePartners,\r\n  //   isFetching: isPracticePartnersLoading,\r\n  //   isError: isPracticePartnersError,\r\n  //   refetch: refetchPracticePartners,\r\n  // } = useGetPracticePartnersQuery();\r\n\r\n  const [ campaigns, setCampaigns ] = useState('');\r\n  const [ categories, setCategories ] = useState('');\r\n  const [ mainCategories, setMainCategories ] = useState('');\r\n  const [ partners, setPartners ] = useState('');\r\n  const [ practicePartners, setPracticePartners ] = useState('');\r\n  const [ totalData, setTotalData ] = useState('');\r\n\r\n  useEffect(async () => {\r\n    !totalData &&\r\n    setTotalData(await fetchData({\r\n      mainCategories: wordPressApiResourcePath.MAIN_CATEGORIES,\r\n      categories: wordPressApiResourcePath.CATEGORIES,\r\n      campaigns: wordPressApiResourcePath.CAMPAIGNS,\r\n      partners: wordPressApiResourcePath.PARTNERS_MAIN,\r\n      practicePartners: wordPressApiResourcePath.PARTNERS_PRACTICE_MAIN,\r\n    }));\r\n    // if(totalData) console.log(totalData);\r\n    if(totalData && !totalData.error) {\r\n      setMainCategories(totalData.mainCategories.data);\r\n      setCategories(totalData.categories.data);\r\n      setCampaigns(totalData.campaigns.data);\r\n      setPartners(totalData.partners.data);\r\n      setPracticePartners(totalData.practicePartners.data);\r\n    };\r\n    // await fetchData('ПРОДУКТ', 'product/3881');  \r\n  });\r\n  // console.log(totalData);\r\n  // let campaigns, isCampaignsLoading, isCampaignsError, refetchCampaigns;\r\n  // console.log('рендер!');\r\n\r\n  // const mainCategories = useSelector(selectNonEmptyMainCategories);\r\n\r\n  const refetchAllEndpoints = useCallback(() => {\r\n    // refetchMainCategories();\r\n    // refetchCourses();\r\n    // refetchPartners();\r\n    // refetchPracticePartners();\r\n    // refetchCategories();\r\n    // refetchCampaigns();\r\n    setTotalData('');\r\n  }, [\r\n    // refetchMainCategories,\r\n    // refetchCourses,\r\n    // refetchPartners,\r\n    // refetchPracticePartners,\r\n    // refetchCategories,\r\n    // refetchCampaigns,\r\n    setTotalData,\r\n  ]);\r\n\r\n  // let isFetchingError = isMainCategoriesError;\r\n  //   // || isCoursesError\r\n  //   // || isPartnersError\r\n  //   // || isPracticePartnersError\r\n  //   // || isCategoriesError\r\n  //   // || isCampaignsError;\r\n  \r\n  let isLoading = false;\r\n  let isFetchingError = false;\r\n  let content = null;\r\n\r\n  // console.log(isFetchingError);\r\n  if (totalData.error) {\r\n    //  || !mainCategories\r\n    content = <Message onButtonClick={refetchAllEndpoints} />;\r\n  // } else if(!mainCategories) {\r\n  //   content = <Message onButtonClick={refetchAllEndpoints} />;\r\n  } else {\r\n    // Set global loading state on the page.\r\n    // Do not show any components content until all other components\r\n    // will be loaded.\r\n    // const isLoading =  isMainCategoriesLoading\r\n    //   // || isCoursesLoading\r\n    //   // || isPartnersLoading\r\n    //   // || isPracticePartnersLoading\r\n    //   || isCategoriesLoading\r\n    //   || isCampaignsLoading;\r\n\r\n    let mainCategoryComponents;\r\n    if(mainCategories) {\r\n      // console.log(mainCategories);\r\n      mainCategoryComponents = mainCategories.map(({ id, title, main_courses }, index) => {\r\n        let sliderWidthAuto = false;\r\n        let slidesPerView = 4;\r\n        let navigation=true;\r\n        // Customize first slider\r\n        if (index === 0) {\r\n          // Set first component custom slides per view value\r\n          slidesPerView = FIRST_MAIN_COMPONENT_SLIDES_PER_VIEW;\r\n          navigation=false;\r\n          //Fix css width because of the lack of the wrapper\r\n          // html elements or css classes!\r\n          sliderWidthAuto = true;\r\n        }\r\n\r\n        return (\r\n          <OffersList\r\n            key={id}\r\n            title={title.rendered}\r\n            // offersIds={coursesIds}\r\n            mainCourses={main_courses}\r\n            componentId={nanoid()}\r\n            slidesPerView={slidesPerView}\r\n            navigation={navigation}\r\n            sliderWidthAuto={sliderWidthAuto}\r\n          />);\r\n      });\r\n    }\r\n\r\n\r\n    content = (\r\n      <>\r\n        <MainSlider campaigns={campaigns} isLoading={true} />\r\n        <div className='container block-sb-right'>\r\n          <div className='block-sb-right__wrapper'>\r\n            <div className='block-sb-right__content'>\r\n              <div className='block-sb-right__carousel'>\r\n                {!mainCategories\r\n                  ? (\r\n                    <OffersListLoader\r\n                      slidesCount={3}\r\n                      width={FIRST_MAIN_COMPONENT_WIDTH}\r\n                    />)\r\n                  : mainCategoryComponents[0]}\r\n              </div>\r\n\r\n              <div className='block-sb-right__filter'>\r\n                <CategoryList\r\n                  categories={categories}\r\n                  isLoading={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <MainPageSidebar />\r\n          </div>\r\n        </div>\r\n        <MobileAppInfo />\r\n\r\n        <div className='container'>\r\n          {!mainCategories\r\n            ? <OffersListLoader isWrapper />\r\n            : mainCategoryComponents[1]}\r\n          {!mainCategories\r\n            ? <OffersListLoader isWrapper />\r\n            : mainCategoryComponents[2]}\r\n\r\n          {!partners\r\n            ? <Partners\r\n              title='Партнеры'\r\n              isLoading={true}\r\n              componentId={PARTNERS_COMPONENT_ID}\r\n            />\r\n            : <Partners\r\n              title='Партнеры'\r\n              partners={partners[0].partners_list}\r\n              isLoading={false}\r\n              componentId={PARTNERS_COMPONENT_ID}\r\n            />\r\n          }\r\n\r\n          {!mainCategories\r\n            ? <OffersListLoader isWrapper />\r\n            : mainCategoryComponents[3]}\r\n          {!mainCategories\r\n            ? <OffersListLoader isWrapper />\r\n            : mainCategoryComponents[4]}\r\n\r\n          {!practicePartners\r\n            ? <Partners\r\n              title='Пройди у них практику'\r\n              isLoading={true}\r\n              componentId={PRACTICE_PARTNERS_COMPONENT_ID}\r\n            />\r\n            : <Partners\r\n              title='Пройди у них практику'\r\n              partners={practicePartners[0].partners_list}\r\n              isLoading={false}\r\n              componentId={PRACTICE_PARTNERS_COMPONENT_ID}\r\n            />\r\n          }\r\n\r\n        {/*{isLoading || mainCategoryComponents.slice(SLOTS_NUMBER)}*/}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  }\r\n\r\n  // content = '123';\r\n\r\n  return (\r\n    <PageLayout>\r\n      {content}\r\n    </PageLayout>\r\n  );\r\n}","import { wordPressApiResourcePath } from '../../const';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\nexport const campaignsSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getCampaigns: builder.query({\r\n      query: () => wordPressApiResourcePath.CAMPAIGNS,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCampaignsQuery } = campaignsSlice;\r\n\r\n// getPhotos: builder.query({\r\n//   query: (limit = 10) => ({\r\n//     url: \"\",\r\n//     method: \"GET\",\r\n//     params: { per_page: limit },\r\n//   }),\r\n// }),\r\n","export default __webpack_public_path__ + \"static/media/slogan.0fc0f3b7.png\";","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport SloganImg from '../../img/slogan.png';\r\n\r\nexport function PageHeader({headerPic}) {\r\n  return (\r\n    <header className=\"page-header\">\r\n      <div className=\"page-header__plug-img\">\r\n        <button className=\"page-header__add-list\">\r\n          <svg className=\"page-header__list-img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"34.859\" height={23} viewBox=\"0 0 34.859 23\" alt=\"\">\r\n            <g id=\"Group_8966\" data-name=\"Group 8966\" transform=\"translate(-1554 -217)\">\r\n              <line id=\"Line_164\" data-name=\"Line 164\" x1=\"31.859\" transform=\"translate(1555.5 218.5)\" fill=\"none\" stroke=\"#24272d\" strokeLinecap=\"round\" strokeWidth={3} />\r\n              <line id=\"Line_165\" data-name=\"Line 165\" x1=\"15.93\" transform=\"translate(1555.5 228.5)\" fill=\"none\" stroke=\"#24272d\" strokeLinecap=\"round\" strokeWidth={3} />\r\n              <g id=\"Group_8961\" data-name=\"Group 8961\" transform=\"translate(1576.615 228.5)\">\r\n                <line id=\"Line_167\" data-name=\"Line 167\" x1=\"10.744\" transform=\"translate(0 5)\" fill=\"none\" stroke=\"#24272d\" strokeLinecap=\"round\" strokeWidth={3} />\r\n                <line id=\"Line_168\" data-name=\"Line 168\" x1={10} transform=\"translate(5.372 0) rotate(90)\" fill=\"none\" stroke=\"#24272d\" strokeLinecap=\"round\" strokeWidth={3} />\r\n              </g>\r\n              <line id=\"Line_166\" data-name=\"Line 166\" x1=\"12.39\" transform=\"translate(1555.5 238.5)\" fill=\"none\" stroke=\"#24272d\" strokeLinecap=\"round\" strokeWidth={3} />\r\n            </g>\r\n          </svg>\r\n        </button>\r\n        <img src={SloganImg} alt=\"Начни учиться в Sokrart.\" className=\"page-header__logo\" />\r\n        <img src={headerPic} alt=\"\" className=\"page-header__course-img\" />\r\n      </div>\r\n      {/*<div className=\"page-header__wrapper\">\r\n        <img src={pageHeaderLogo} alt=\"Начни учиться в Sokrart.\" className=\"page-header__logo\" />\r\n        <img src={pageCourseImage} alt=\"\" className=\"page-header__course-img\" />\r\n      </div>*/}\r\n    </header>\r\n  );\r\n}\r\n\r\nPageHeader.propTypes = {\r\n  headerPic: PropTypes.string.isRequired,\r\n};\r\n\r\n","/* eslint-disable */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport function CourseInfo({database}) {\r\n  // console.log(database);\r\n\r\n  let html;\r\n\r\n  if(database) {\r\n    console.log(database);\r\n    const { title, content } = database;\r\n    // console.log(content.rendered);\r\n    html = (\r\n      <div className=\"course__info\">\r\n        <h1 className=\"course__title\">{title.rendered}</h1>\r\n        <p className=\"course__price\">Стоимость обучения <NumberFormat value=''displayType={'text'} thousandSeparator=\" \" suffix=\" ₽\" /></p>\r\n        <p className=\"course__description\">{content.rendered}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>{html}</>\r\n  );\r\n\r\n}\r\n\r\nCourseInfo.propTypes = {\r\n  database: PropTypes.array.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\nexport function SidebarInfo({database}) {\r\n  const { duration, format, partners, partnersTrumb, partnerLink } = database;\r\n  // const IsPagePractice = (() => {\r\n  //   const location = useLocation();\r\n  //   return (location.pathname === '/practice');\r\n  // });\r\n  // const detailTitle = IsPagePractice ? 'Детали стажировки' : 'Детали курса';\r\n  // const partnerTitle = IsPagePractice ? 'Детали стажировки' : 'Детали курса';\r\n\r\n  return (\r\n    <div className=\"course__sidebar\">\r\n      <p className=\"course__sidebar-title\">Партнер</p>\r\n      <div className=\"course__partner\">\r\n        <a href={partnerLink} className=\"course__partner-img-link\">\r\n          <img src={partnersTrumb} alt={partners} className=\"course__partner-img\" />\r\n        </a>\r\n        <p className=\"course__partner-title\">\r\n          <a href={partnerLink} className=\"course__partner-link\">{partners}\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <div className=\"course__details\">\r\n        <p className=\"course__sidebar-title\">Детали</p>\r\n        <ul className=\"course__details-list\">\r\n          <li className=\"course__details-item course__details-item--duration\">\r\n            <p className=\"course__details-title\">Срок обучения</p>\r\n            <p className=\"course__details-info\">{duration}</p>\r\n          </li>\r\n          <li className=\"course__details-item course__details-item--format\">\r\n            <p className=\"course__details-title\">Формат обучения</p>\r\n            <p className=\"course__details-info\">{format}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebarInfo.propTypes = {\r\n  database: PropTypes.array.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport function CourseTeachers({teachers}) {\r\n  return (\r\n    <div className=\"course__teacher teacher\">\r\n      <p className=\"teacher__title\">Преподаватели</p>\r\n\r\n      <ul className=\"teacher__list\">\r\n        {teachers.map((data) => {\r\n\r\n          const {name, trumb, link, id} = data;\r\n          return (\r\n            <li key={id} className=\"teacher__item\">\r\n              <a href={link} className=\"teacher__img-link\">\r\n                <img src={trumb} alt={name} className=\"teacher__img\" />\r\n              </a>\r\n              <a href=\"/instructor/3971\" className=\"teacher__link\">{name}</a>\r\n            </li>\r\n\r\n          );\r\n        })};\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nCourseTeachers.propTypes = {\r\n  teachers: PropTypes.array.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nexport function CourseProgram({program}) {\r\n  return (\r\n    <div className=\"course__programm\">\r\n      <p className=\"course__programm-title\">Программа курса</p>\r\n      <ul className=\"course__programm-list\">\r\n        {program.map((data, i) => {\r\n          const {title, duration, id} = data;\r\n          return (\r\n            <li key={id} className=\"course__programm__item\">\r\n              <p className=\"course__lesson-title\">{title}</p>\r\n              <p className=\"course__lesson-duration\"><NumberFormat value={duration} displayType={'text'} format=\"### ч.\" /></p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nCourseProgram.propTypes = {\r\n  program: PropTypes.array.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport function CourseCertificate({certificate}) {\r\n  const {name, trumb, link} = certificate;\r\n  return (\r\n    <div className=\"course__certificate\">\r\n      <p className=\"course__sidebar-title course__sidebar-title--big\">Ваш сертификат</p>\r\n      <a href={link} className=\"course__certificate__img-link\">\r\n        <img src={trumb} alt={name} className=\"course__certificate-img\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nCourseCertificate.propTypes = {\r\n  certificate: PropTypes.object.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport function CoursePay({courseData}) {\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"course__payment\">\r\n        <div className=\"course__payment-btn\" onClick={() => setButtonPopup(true)}>Оплатить обучение</div>\r\n      </div>\r\n\r\n      <CoursePopUp\r\n        trigger={buttonPopup}\r\n        setTrigger={setButtonPopup}\r\n        courseData={courseData}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CoursePopUp({trigger, setTrigger, courseData}) {\r\n  const {id, title, partners} = courseData;\r\n\r\n  return (trigger) ? (\r\n    <section className=\"popup\">\r\n      <form className=\"popup__form\" action>\r\n        <h2 className=\"popup__title\">Оплата курса</h2>\r\n        <button className=\"popup__close\" type=\"button\" onClick={() => setTrigger(false)}/>\r\n        <fieldset className=\"popup__fieldset fieldset\">\r\n          <legend className=\"fieldset__title\">Контактные данные</legend>\r\n          <ul className=\"fielset__input-list\">\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"last-name\">Ваша фамилия</label>\r\n              <input className=\"input__field\" type=\"text\" id=\"last-name\" placeholder=\"Введите вашу фамилию\" />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"first-name\">Введите ваше имя</label>\r\n              <input className=\"input__field\" type=\"text\" id=\"first-name\" placeholder=\"Ваше имя\" />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"patronomic\">Введите ваше отчество</label>\r\n              <input className=\"input__field\" type=\"text\" id=\"patronomic\" placeholder=\"Ваше отчество\" />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"phone\">Ваш номер телефона</label>\r\n              <input className=\"input__field\" type=\"number\" id=\"phone\" placeholder=\"+7 (920) 123 45 67\" />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"email\">Ваш email</label>\r\n              <input className=\"input__field\" type=\"email\" id=\"email\" placeholder=\"Введите вашу почту\" />\r\n            </li>\r\n          </ul>\r\n        </fieldset>\r\n        <fieldset className=\"popup__fieldset fieldset\">\r\n          <legend className=\"fieldset__title\">Данные о курсе</legend>\r\n          <ul className=\"fielset__input-list\">\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"course-id\">id курса</label>\r\n              <input className=\"input__field\" type=\"number\" id=\"course-id\" defaultValue={id} readOnly />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"course-name\">Название курса</label>\r\n              <input className=\"input__field\" type=\"text\" id=\"course-name\" defaultValue={title} readOnly />\r\n            </li>\r\n            <li className=\"fieldset__input-item input\">\r\n              <label className=\"input__label\" htmlFor=\"partner\">Партнер курса</label>\r\n              <input className=\"input__field\" type=\"text\" id=\"partner\" defaultValue={partners} readOnly />\r\n            </li>\r\n          </ul>\r\n        </fieldset>\r\n        <fieldset className=\"popup__fieldset fieldset fieldset--pay\">\r\n          <legend className=\"fieldset__title\">Способ оплаты</legend>\r\n          <ul className=\"fielset__input-list\">\r\n            <li className=\"fieldset__input-item input input--pay\">\r\n              <input className=\"input__field\" type=\"text\" defaultValue=\"Оплата с помощью карты\" readOnly />\r\n            </li>\r\n          </ul>\r\n        </fieldset>\r\n        <p className=\"popup__info\">\r\n          Нажимая оплатить, вы соглашаетесь\r\n          с нашей <a className=\"popup__confidentiality\" href=\"#\">Политикой конфиденциальности</a>\r\n        </p>\r\n        <button className=\"popup__button-pay btn btn--disabled\" type=\"submit\" disabled>Оплатить <b className=\"popup__price\">140 000 ₽</b></button>\r\n      </form>\r\n    </section>\r\n  ) : '';\r\n}\r\n\r\nCoursePay.propTypes = {\r\n  courseData: PropTypes.object.isRequired,\r\n};\r\n\r\nCoursePopUp.propTypes = {\r\n  trigger: PropTypes.bool.isRequired,\r\n  setTrigger: PropTypes.func.isRequired,\r\n  courseData: PropTypes.object.isRequired,\r\n};\r\n\r\n// CourseInfo.defaultProps = {\r\n//   partners: { ids: [], entities: {}},\r\n// };\r\n","export default __webpack_public_path__ + \"static/media/page-course-img.fba97118.svg\";","/* eslint-disable */\r\nimport { createEntityAdapter, createSelector } from '@reduxjs/toolkit';\r\nimport { wordPressApiResourcePath } from '../../const';\r\nimport { wordPressApi } from './word-press-api';\r\n\r\n// Может удалить этот файл\r\n\r\nconst courseAdapter = createEntityAdapter();\r\n\r\nexport const courseSlice = wordPressApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getCourse: builder.query({\r\n      query: () => 'https://sokratapp.ru/wp-json/wp/v2/product/2750',\r\n      // transformResponse: (response) => courseAdapter.addMany(courseAdapter.getInitialState(), response),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCourseQuery } = courseSlice;\r\n\r\nconst selectCourseResult = courseSlice.endpoints.getCourse.select();\r\n\r\nexport const selectAllCourse = createSelector(\r\n  selectCourseResult,\r\n  (coursesResult) => courseResult?.data ?? {},\r\n);\r\n\r\n// const [postContent, setPostContent] = useState(false);\r\n// const { courseId } = useParams();\r\n// fetch('https://sokratapp.ru/wp-json/wp/v2/product/' + courseId)\r\n//   .then((response) => response.json())\r\n//   .then((post) => {\r\n//     setPostContent(post);\r\n//   });\r\n","/* eslint-disable */\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageLayout from '../page-layout/page-layout';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport OffersListLoader from '../offers-list-loader/offers-list-loader';\r\nimport OffersList from '../offers-list/offers-list';\r\nimport { selectNonEmptyMainCategories, useGetMainCategoriesQuery } from '../../store/api/main-categories-slice';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport Message from '../message/message';\r\nimport { PageHeader } from '../page-header/page-header';\r\nimport { CourseInfo } from './course-info';\r\nimport { SidebarInfo } from '../sidebar-info/sidebar-info';\r\nimport { CourseTeachers } from './course-teachers';\r\nimport { CourseProgram } from './course-program';\r\nimport { CourseCertificate } from './course-certificate';\r\nimport { CoursePay } from './course-pay';\r\n\r\nimport PageHeaderPic from '../../img/page-course-img.svg';\r\n\r\nimport { useGetCourseQuery } from '../../store/api/course-slice';\r\n\r\n\r\n\r\nconst CourseData = {\r\n  id: 12345,\r\n  title: 'МВА – GENERAL MANAGEMENT',\r\n  price: 700000,\r\n  descr: 'Курс General Management программы MBA предназначен для подготовки элитных руководителей, которые владеют фундаментальными знаниями о современном состоянии экономики, обладают глубоким пониманием логики стратегического...',\r\n  duration: '23 месяца',\r\n  format: 'online',\r\n  partners: 'Государственный университет управления',\r\n  partnersTrumb: '/img/course-page/course-partner-logo@2x.png',\r\n  partnerLink: '',\r\n};\r\n\r\nconst courseTeachersData = [\r\n  {\r\n    name: 'Валентин Пановский',\r\n    trumb: '/img/course-page/teacher-photo.jpg',\r\n    link: '',\r\n    id: '1',\r\n  },\r\n  {\r\n    name: 'Валентин Пановский',\r\n    trumb: '/img/course-page/teacher-photo.jpg',\r\n    link: '',\r\n    id: '2',\r\n  },\r\n  {\r\n    name: 'Валентин Пановский',\r\n    trumb: '/img/course-page/teacher-photo.jpg',\r\n    link: '',\r\n    id: '3',\r\n  },\r\n  {\r\n    name: 'Валентин Пановский',\r\n    trumb: '/img/course-page/teacher-photo.jpg',\r\n    link: '',\r\n    id: '4',\r\n  },\r\n  {\r\n    name: 'Валентин Пановский',\r\n    trumb: '/img/course-page/teacher-photo.jpg',\r\n    link: '',\r\n    id: '5',\r\n  },\r\n];\r\n\r\nconst courseProgramData = [\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '1',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '2',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '3',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '4',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '5',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '6',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '7',\r\n  },\r\n  {\r\n    title: 'Python для Data Science',\r\n    duration: 8,\r\n    id: '8',\r\n  },\r\n];\r\n\r\nconst courseCetificateData = {\r\n  name: 'Сертификат курса МВА – GENERAL MANAGEMENT',\r\n  trumb: '/img/course-page/certificate.jpg',\r\n  link: '',\r\n};\r\n\r\n\r\nfunction CoursePage() {\r\n  // Этот способ не забирает всю инфу. Надо понять WP API\r\n\r\n  const [postContent, setPostContent] = useState(null);\r\n  // почему-то 3 раза fetch\r\n  if(!postContent) {\r\n\r\n    const { courseId } = useParams();\r\n    fetch('https://sokratapp.ru/wp-json/wp/v2/product/' + courseId)\r\n      .then((response) => response.json())\r\n      .then((post) => {\r\n        setPostContent(post);\r\n      });\r\n  }\r\n\r\n  // const {\r\n  //   isFetching: isMainCategoriesLoading,\r\n  //   isError: isMainCategoriesError,\r\n  //   refetch: refetchMainCategories,\r\n  // } = useGetMainCategoriesQuery();\r\n\r\n  // const mainCategories = useSelector(selectNonEmptyMainCategories);\r\n\r\n  // const refetchAllEndpoints = useCallback(() => {\r\n  //   refetchMainCategories();\r\n  // }, [\r\n  //   refetchMainCategories,\r\n  // ]);\r\n\r\n  // const isFetchingError = isMainCategoriesError;\r\n\r\n  // const {\r\n  //   data: course,\r\n  //   isFetching: isCourseLoading,\r\n  //   // isError: isMainCategoriesError,\r\n  //   // refetch: refetchMainCategories,\r\n  // } = useGetCourseQuery();\r\n\r\n  // console.log(course, isCourseLoading);\r\n\r\n  let content = (\r\n    <>\r\n      <PageHeader headerPic={PageHeaderPic} />\r\n      <div className=\"course\">\r\n        <div className=\"course__wrapper\">\r\n\r\n          <CourseInfo database={postContent} />\r\n          <SidebarInfo database={CourseData} />\r\n          <CourseTeachers teachers={courseTeachersData} />\r\n          <CourseProgram program={courseProgramData} />\r\n          <CourseCertificate certificate={courseCetificateData} />\r\n          <CoursePay courseData={CourseData} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  // if (isFetchingError) {\r\n  //   content = <Message onButtonClick={refetchAllEndpoints} />;\r\n  // } else {\r\n  //   const isLoading =  isMainCategoriesLoading;\r\n  //   const mainCategoryComponents = mainCategories.map(({ id, title, coursesIds }, index) => {\r\n  //     let sliderWidthAuto = false;\r\n  //     // Customize first slider\r\n  //     if (index === 0) {\r\n  //       // Set first component custom slides per view value\r\n  //       //slidesPerView = FIRST_MAIN_COMPONENT_SLIDES_PER_VIEW;\r\n  //       //Fix css width because of the lack of the wrapper\r\n  //       // html elements or css classes!\r\n  //       sliderWidthAuto = true;\r\n  //     }\r\n\r\n  //     return (\r\n  //       <OffersList\r\n  //         key={id}\r\n  //         title={title.rendered}\r\n  //         offersIds={coursesIds}\r\n  //         componentId={nanoid()}\r\n  //         sliderWidthAuto={sliderWidthAuto}\r\n  //       />);\r\n  //   });\r\n\r\n  //   content = (\r\n  //     <>\r\n  //       {content}\r\n  //       {isLoading\r\n  //         ? <OffersListLoader isWrapper />\r\n  //         : mainCategoryComponents[1]}\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <PageLayout>\r\n      {content}\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default CoursePage;\r\n","export default __webpack_public_path__ + \"static/media/practice-card.2e661719.png\";","/* eslint-disable */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport function SidebarCategory({blockTitle, categories, isLoading, isError}) {\r\n  let content;\r\n\r\n  // loader\r\n  for(let count=0;  count < 6; count++) {\r\n    content = (\r\n      <>\r\n        {content}\r\n        <ContentLoader\r\n          key={nanoid()}\r\n          width={100}\r\n          height={129}\r\n          // viewBox=\"0 0 400 160\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          foregroundColor=\"#ecebeb\"\r\n        >\r\n          <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"100\" />\r\n          <rect x=\"10\" y=\"115\" rx=\"2\" ry=\"2\" width=\"80\" height=\"10\" />\r\n        </ContentLoader>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if(!isLoading && !isError) {\r\n    content = '';\r\n    const { entities } = categories;\r\n\r\n\r\n    for (const i in entities) {\r\n      const { title, id, pictogram } = entities[i];\r\n\r\n      content = (\r\n        <>\r\n          {content}\r\n          <li key={id} className=\"profession__category-item\">\r\n            <input className=\"profession__category-input visually-hidden\" id=\"blockchain\" type=\"checkbox\" name=\"category\" defaultValue={title} />\r\n            <label className=\"profession__category-label\" htmlFor=\"blockchain\">\r\n              <picture>\r\n                <source media=\"(max-width: 768px)\" srcSet=\"/img/courses-page/category-placeholder-mobile.jpg\" />\r\n                <img className=\"profession__category-img\" src='/img/courses-page/category-placeholder.jpg' width=\"99px\" height=\"99px\" alt=\"\" data-img={pictogram} />\r\n              </picture>\r\n              <span className=\"profession__category-name\">{title}</span>\r\n            </label>\r\n          </li>\r\n        </>\r\n      );\r\n    }\r\n\r\n    // content = (\r\n    //   <>\r\n    //     {/*{categories.map((data, i) => <SidebarCategoryItem key={nanoid()} data={data}/>)};*/}\r\n    //     загружено!\r\n\r\n    //   </>\r\n    // )\r\n  }\r\n\r\n  return (\r\n    <div className=\"profession__category\">\r\n      <h2 className=\"profession__category-title\">{blockTitle}</h2>\r\n      <ul className=\"profession__category-list\">\r\n        {content}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebarCategory.propTypes = {\r\n  blockTitle: PropTypes.string.isRequired,\r\n  categories: PropTypes\r\n    .shape({\r\n      ids: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n      // entities: PropTypes.Array.isRequired,\r\n      entities: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        // [PropTypes.string]: title,\r\n      }).isRequired,\r\n    })\r\n    .isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PageLayout from '../page-layout/page-layout';\r\nimport { PageHeader } from '../page-header/page-header';\r\nimport PageHeaderPic from '../../img/practice-card.png';\r\n\r\nimport {SidebarCategory} from '../sidebar-category/sidebar-category';\r\n// import {CoursesList} from '../courses-list/courses-list';\r\n\r\nimport { useGetCategoriesQuery } from '../../store/api/categories-slice';\r\nimport { useGetCoursesQuery } from '../../store/api/courses-slice';\r\n\r\nexport default function CoursesPage() {\r\n  const {\r\n    data: categories,\r\n    isFetching: isCategoriesLoading,\r\n    isError: isCoursesError,\r\n    // refetch: refetchCourses,\r\n  } = useGetCategoriesQuery();\r\n\r\n  // const {\r\n  //   data: courses,\r\n  //   isFetching: isCoursesLoading,\r\n  //   // isError: isCoursesError,\r\n  //   // refetch: refetchCourses,\r\n  // } = useGetCoursesQuery();\r\n\r\n  // if(courses) CoursesListData = courses;\r\n  // const {endpoints} = courses;\r\n\r\n  // fetch('https://sokratapp.ru/wp-json/wp/v2/categories')\r\n  //   .then((response) => response.json())\r\n  //   .then((posts) => {\r\n\r\n  //     CoursesListData = posts;\r\n  //     console.log(CoursesListData);\r\n  //   });\r\n\r\n  const content = (\r\n    <>\r\n      <PageHeader headerPic={PageHeaderPic} />\r\n      <div className=\"profession container\">\r\n        <SidebarCategory\r\n          blockTitle = 'Выберите темы, которые вам интересны'\r\n          categories= {categories}\r\n          isLoading = {isCategoriesLoading}\r\n          isError={isCoursesError}\r\n        />\r\n        <div className=\"course-all__block\">\r\n\r\n          <form action>\r\n            <input className=\"course-all__search\" type=\"search\" placeholder=\"Поиск по курсам\" />\r\n            <div className=\"course-all__button-box\">\r\n              <button className=\"course-all__btn-options\" type=\"button\">\r\n                <img src=\"img/favicon/settings.svg\" alt=\"\" />\r\n              </button>\r\n              <button className=\"course-all__btn-frontend\" type=\"button\">Frontend</button>\r\n              <button className=\"course-all__btn-backend\" type=\"button\">Backend</button>\r\n            </div>\r\n          </form>\r\n          {/*<CoursesList\r\n            courses={courses}\r\n            isLoading={isCoursesLoading}\r\n          />*/}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <PageLayout>\r\n      {content}\r\n    </PageLayout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Message from '../message/message';\r\nimport PageLayout from '../page-layout/page-layout';\r\n\r\nconst MESSAGE = 'Страница не найдена';\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <PageLayout>\r\n      <Message\r\n        message={MESSAGE}\r\n        isButtonVisible={false}\r\n      />\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport UnderConstructionPage from '../under-construction-page/under-construction-page';\r\n\r\nfunction PartnerPage() {\r\n  return (\r\n    <UnderConstructionPage />\r\n  );\r\n}\r\n\r\nexport default PartnerPage;\r\n","import React from 'react';\r\nimport UnderConstructionPage from '../under-construction-page/under-construction-page';\r\n\r\nfunction PracticesPage() {\r\n  return (\r\n    <UnderConstructionPage />\r\n  );\r\n}\r\n\r\nexport default PracticesPage;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport function PracticeInfo({database}) {\r\n  const {practiceTitle, pricticePrice, practiceDescr, practiceHardSkills, practiceSoftSkills} = database;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"practice__info\">\r\n        <h1 className=\"practice__title\">{practiceTitle}</h1>\r\n        <p className=\"practice__price\">Оплата: <NumberFormat value={pricticePrice} displayType={'text'} thousandSeparator=\" \" suffix=\" ₽/мес.\" /></p>\r\n        <p className=\"practice__description\">{practiceDescr}</p>\r\n      </div>\r\n      <div className=\"practice__skills-hard skills\">\r\n        <p>Hard Skills</p>\r\n        <ul className=\"skills__list\">\r\n          {practiceHardSkills.map((skill) =>\r\n            <li key={nanoid()} className=\"skills__item\"><a href=\"#\">{skill}</a></li>,\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className=\"practice__skills-soft skills\">\r\n        <p>Soft Skills</p>\r\n        <ul className=\"skills__list\">\r\n          {practiceSoftSkills.map((skill) =>\r\n            <li key={nanoid()} className=\"skills__item\"><a href=\"#\">{skill}</a></li>,\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nPracticeInfo.propTypes = {\r\n  database: PropTypes.array.isRequired,\r\n};\r\n","/* eslint-disable */\r\n// import PropTypes from 'prop-types';\r\nimport React, { useCallback } from 'react';\r\nimport PageLayout from '../page-layout/page-layout';\r\n// /* eslint-disable */\r\nimport { selectNonEmptyMainCategories, useGetMainCategoriesQuery } from '../../store/api/main-categories-slice';\r\nimport { useSelector } from 'react-redux';\r\nimport Message from '../message/message';\r\nimport OffersList from '../offers-list/offers-list';\r\nimport OffersListLoader from '../offers-list-loader/offers-list-loader';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { PageHeader } from '../page-header/page-header';\r\nimport PageHeaderPic from '../../img/page-course-img.svg';\r\n\r\nimport { PracticeInfo } from './practice-info';\r\nimport { SidebarInfo } from '../sidebar-info/sidebar-info';\r\n\r\nconst PracticeData = {\r\n  id: 12345,\r\n  duration: '23 месяца',\r\n  format: 'online',\r\n  partners: 'Государственный университет управления',\r\n  partnersTrumb: '/img/course-page/course-partner-logo@2x.png',\r\n  partnerLink: '',\r\n\r\n  practiceTitle: 'Frontend Developer',\r\n  pricticePrice: 10000,\r\n  practiceDescr: 'Курс General Management программы MBA предназначен для подготовки элитных руководителей, которые владеют фундаментальными знаниями о современном состоянии экономики, обладают глубоким пониманием логики стратегического...',\r\n  practiceLink: '',\r\n  practiceHardSkills: ['CSS', 'CSS', 'CSS', 'HTML', 'HTML', 'HTML', 'GitHub','GitHub', 'GitHub'],\r\n  practiceSoftSkills: ['CSS', 'CSS', 'CSS', 'HTML', 'HTML', 'HTML', 'GitHub','GitHub', 'GitHub'],\r\n};\r\n\r\nfunction PracticesPage() {\r\n\r\n  const {\r\n    isFetching: isMainCategoriesLoading,\r\n    isError: isMainCategoriesError,\r\n    refetch: refetchMainCategories,\r\n  } = useGetMainCategoriesQuery();\r\n\r\n  // const mainCategories = useSelector(selectNonEmptyMainCategories);\r\n\r\n  const refetchAllEndpoints = useCallback(() => {\r\n    refetchMainCategories();\r\n  }, [\r\n    refetchMainCategories,\r\n  ]);\r\n\r\n  const isFetchingError = isMainCategoriesError;\r\n\r\n\r\n  const {practiceLink} = PracticeData;\r\n  let content = (\r\n    <div className=\"practice\">\r\n      <div className=\"practice__wrapper\">\r\n        <PracticeInfo database={PracticeData} />\r\n        <SidebarInfo database={PracticeData} />\r\n        <div className=\"practice__payment\">\r\n          <a href={practiceLink} className=\"practice__payment-btn\">Хочу устроиться</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // if (isFetchingError) {\r\n  //   content = <Message onButtonClick={refetchAllEndpoints} />;\r\n  // } else {\r\n  //   const isLoading =  isMainCategoriesLoading;\r\n  //   const mainCategoryComponents = mainCategories.map(({ id, title, coursesIds }, index) => {\r\n  //     let sliderWidthAuto = false;\r\n  //     // Customize first slider\r\n  //     if (index === 0) {\r\n  //       // Set first component custom slides per view value\r\n  //       //slidesPerView = FIRST_MAIN_COMPONENT_SLIDES_PER_VIEW;\r\n  //       //Fix css width because of the lack of the wrapper\r\n  //       // html elements or css classes!\r\n  //       sliderWidthAuto = true;\r\n  //     }\r\n\r\n  //     return (\r\n  //       <OffersList\r\n  //         key={id}\r\n  //         title={title.rendered}\r\n  //         offersIds={coursesIds}\r\n  //         componentId={nanoid()}\r\n  //         sliderWidthAuto={sliderWidthAuto}\r\n  //       />);\r\n  //   });\r\n\r\n  //   content = (\r\n  //     <>\r\n  //       {content}\r\n  //       {isLoading\r\n  //         ? <OffersListLoader isWrapper />\r\n  //         : mainCategoryComponents[1]}\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <PageLayout>\r\n      <PageHeader headerPic={PageHeaderPic} />\r\n      {content}\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default PracticesPage;\r\n\r\nPracticesPage.propTypes = {\r\n  // database: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport UnderConstructionPage from '../under-construction-page/under-construction-page';\r\n\r\n\r\nfunction SearchResultPage() {\r\n  return (\r\n    <UnderConstructionPage />\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","/* eslint-disable */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport function InstructorInfo({database}) {\r\n  let content = 'загружаю....';\r\n  if(database) {\r\n    console.log(database);\r\n    const {title,\r\n      descr,\r\n      position,\r\n      experience,\r\n      teacher_raiting,\r\n      teacher_company,\r\n      teacher_company_2,\r\n      teacher_company_3,   \r\n      } = database;\r\n    content = (\r\n      <div className=\"instructor__info\">\r\n        <img className=\"instructor__avatar\" src='/img/instructor-page/teacher.jpg' width=\"373px\" height=\"373px\" alt=\"\" />\r\n        <div className=\"instructor__data\">\r\n          <div className=\"instructor__inner\">\r\n            <h2 className=\"instructor__title\">{title.rendered}</h2>\r\n            <p className=\"instructor__text\">{descr}</p>\r\n            <button className=\"instructor__more\">показать еще</button>\r\n          </div>\r\n          <ul className=\"instructor__list\">\r\n            <li className=\"instructor__item\">\r\n              <a className=\"instructor__link instructor__link--portfolio\" href=\"#\">\r\n                <p className=\"instructor__information\">Текущая должность</p>\r\n                <p className=\"instructor__prompt instructor__prompt--active\">{position}</p>\r\n              </a>\r\n            </li>\r\n            <li className=\"instructor__item\">\r\n              <a className=\"instructor__link instructor__link--experience\" href=\"#\">\r\n                <p className=\"instructor__information\">Опыт <span className=\"instructor__number instructor__number--center\">{experience}</span></p>\r\n                <p className=\"instructor__prompt\">Работал в должности</p>\r\n              </a>\r\n            </li>\r\n            <li className=\"instructor__item\">\r\n              <a className=\"instructor__link instructor__link--simple\" href=\"#\">\r\n                Рейтинг <span className=\"instructor__number\">{teacher_raiting}</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <h2 className=\"instructor__title instructor__title--small\">Компании</h2>\r\n          <ul className=\"instructor__company-list\">\r\n            {teacher_company &&\r\n              (<li key={nanoid()} className=\"instructor__company-item\">\r\n                <a className=\"instructor__link instructor__link--company\" href=\"#\">\r\n                  <p className=\"instructor__information\">{teacher_company}</p>\r\n                </a>\r\n              </li>)}\r\n            {teacher_company_2 &&\r\n              (<li key={nanoid()} className=\"instructor__company-item\">\r\n                <a className=\"instructor__link instructor__link--company\" href=\"#\">\r\n                  <p className=\"instructor__information\">{teacher_company_2}</p>\r\n                </a>\r\n              </li>)}\r\n            {teacher_company_3 &&\r\n              (<li key={nanoid()} className=\"instructor__company-item\">\r\n                <a className=\"instructor__link instructor__link--company\" href=\"#\">\r\n                  <p className=\"instructor__information\">{teacher_company_3}</p>\r\n                </a>\r\n              </li>)}\r\n            {/*{companies.map((nameCompany, i) => {\r\n              const nameC = nameCompany;\r\n              const index = i;\r\n              return (\r\n                <li key={index} className=\"instructor__company-item\">\r\n                  <a className=\"instructor__link instructor__link--company\" href=\"#\">\r\n                    <p className=\"instructor__information\">{nameC}</p>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })};*/}\r\n          </ul>\r\n        </div>\r\n        <a className=\"instructor__btn btn\" href=\"#\">Оставить отзыв</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>{content}</>\r\n  );\r\n}\r\n\r\nInstructorInfo.propTypes = {\r\n  database: PropTypes.array.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { nanoid } from 'nanoid';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\n\r\nexport function CoursesList({courses, isLoading}) {\r\n  let contentCats;\r\n\r\n  // loader\r\n  for(let count=0;  count < 6; count++) {\r\n    contentCats = (\r\n      <>\r\n        {contentCats}\r\n        <ContentLoader \r\n          // speed={2}\r\n          width={307}\r\n          height={317}\r\n          // viewBox=\"0 0 400 160\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          foregroundColor=\"#ecebeb\"\r\n        >\r\n          <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"307\" height=\"317\" />\r\n        </ContentLoader>\r\n      </>\r\n    )\r\n  }\r\n\r\n  if(!isLoading) {\r\n    contentCats = '';\r\n    const { entities } = courses;\r\n    console.log(entities);\r\n\r\n    for (const id in entities) {\r\n      const { title, duration, price, link } = entities[id];\r\n      contentCats = (\r\n        <>\r\n          {contentCats}\r\n          <li key={nanoid()} className=\"instructor__courses-item\">\r\n            {/*<img className=\"instructor__courses-img\" src={trumb} width={282} height={151} alt=\"\" />*/}\r\n            <img className=\"instructor__courses-img\" src='/img/courses-page/course_default-trumb.png' width={282} height={151} alt=\"\" />\r\n            <p className=\"instructor__courses-price\">\r\n              <NumberFormat value={price} displayType={'text'} thousandSeparator=\" \" suffix=\" ₽\" />\r\n              <span className=\"instructor__courses-term\">\r\n                {duration}\r\n              </span>\r\n            </p>\r\n            <p className=\"instructor__courses-title\">{title}</p>\r\n            <a className=\"instructor__courses-link btn\" href={'/courses/' + id} data-link={link} target=\"_blank\" rel=\"noreferrer\">Подробнее</a>\r\n          </li>\r\n        </>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <ul className=\"instructor__courses-list practice-all__list\">\r\n      {contentCats}\r\n    </ul>\r\n  );\r\n}\r\n\r\nCoursesList.propTypes = {\r\n  // title: PropTypes.string.isRequired,\r\n  courses: PropTypes\r\n    .shape({\r\n      ids: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n      // entities: PropTypes.Array.isRequired,\r\n      entities: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        // [PropTypes.string]: title,\r\n      }).isRequired,\r\n    })\r\n    .isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  // componentId: PropTypes.string.isRequired,\r\n};\r\n\r\nCoursesList.defaultProps = {\r\n  courses: { ids: [], entities: {}},\r\n};\r\n\r\n// CoursesList.propTypes = {\r\n//   categoryList: PropTypes.array.isRequired,\r\n// };\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {SidebarCategory} from '../sidebar-category/sidebar-category';\r\nimport {CoursesList} from '../courses-list/courses-list';\r\n\r\nexport function InstructorCourses({categories, courses}) {\r\n  return (\r\n    <div className=\"instructor__courses\">\r\n      <SidebarCategory\r\n        title = 'Категории'\r\n        categories={categories}\r\n      />\r\n\r\n      <CoursesList\r\n        categoryList={courses}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nInstructorCourses.propTypes = {\r\n  categories: PropTypes.array.isRequired,\r\n  courses: PropTypes.array.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport PageLayout from '../page-layout/page-layout';\r\n// import { PageHeader } from '../page-header/page-header';\r\nimport { InstructorInfo } from './instructor-info';\r\nimport { InstructorCourses } from './instructor-courses';\r\nimport { useParams } from 'react-router';\r\n// exp\r\n// import { useGetCampaignsQuery } from '../../store/api/campaigns-slice';\r\n// import { MainSlider } from '../main-slider/main-slider';\r\n\r\n\r\n// const instructorData = {\r\n//   name: 'Сергей Кокарев',\r\n//   trumb: '/img/instructor-page/teacher.jpg',\r\n//   descr: 'Образовательный портал, который помогает начать карьеру в digital с нуля или получить новые навыки для её развития',\r\n//   position: 'Партнёр агентства «Апрель» и руководитель направления стратегии и креатива',\r\n//   experience: '10 лет',\r\n//   rating: '4.8',\r\n//   companies: ['Агентство «Апрель»', 'Агентство «Апрель»', 'Агентство «Апрель»', 'Агентство «Апрель»'],\r\n// };\r\n\r\nconst InstructorCategory = [\r\n  {\r\n    name: 'Блокчейн',\r\n    slug: 'blockchain',\r\n    trumb: '/img/courses-page/category-placeholder.jpg',\r\n  },\r\n  {\r\n    name: 'Блокчейн',\r\n    slug: 'blockchain',\r\n    trumb: '/img/courses-page/category-placeholder.jpg',\r\n  },\r\n  {\r\n    name: 'Блокчейн',\r\n    slug: 'blockchain',\r\n    trumb: '/img/courses-page/category-placeholder.jpg',\r\n  },\r\n];\r\n\r\nconst InstrustorCourses = [\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n  {\r\n    title: 'Философия искусственного интеллекта',\r\n    price: 700000,\r\n    duration: '23 месяца',\r\n    link: '',\r\n    trumb: '/img/courses-page/slider-placeholder.jpg',\r\n    slug: '1',\r\n  },\r\n];\r\n\r\n\r\nexport default function InstructorPage() {\r\n  const [instructorData, setInstructorData] = useState(null);\r\n  // почему-то 3 раза fetch\r\n  if(!instructorData) {\r\n    const { instructorId } = useParams();\r\n    fetch('https://sokratapp.ru/wp-json/wp/v2/sokrat_teacher/' + instructorId)\r\n      .then((response) => response.json())\r\n      .then((post) => {\r\n        setInstructorData(post);\r\n      });\r\n    fetch('https://sokratapp.ru/wp-json/wp/v2/media?parent=' + instructorId)\r\n      .then((response) => response.json())\r\n      .then((media) => {\r\n        console.log(media[0].source_url);\r\n      });       \r\n  }\r\n\r\n\r\n\r\n  // const {\r\n  //   data: campaigns,\r\n  //   // isFetching: isCampaignsLoading,\r\n  //   // isError: isCampaignsError,\r\n  //   // refetch: refetchCampaigns,\r\n  // } = useGetCampaignsQuery();\r\n\r\n  const content = (\r\n\r\n    <section className=\"main__instructor instructor container\">\r\n      {/*<MainSlider campaigns={campaigns} isLoading='' />*/}\r\n      <InstructorInfo database={instructorData} />\r\n      <InstructorCourses\r\n        categories={InstructorCategory}\r\n        courses={InstrustorCourses}\r\n      />\r\n    </section>\r\n  );\r\n\r\n  return (\r\n    <PageLayout>\r\n      {content}\r\n    </PageLayout>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function PopUpCookie() {\r\n  const [ visibleCookie, setVisibleCookie ] = useState(true);\r\n\r\n  return (\r\n    <section className={visibleCookie ? 'popup-cookie' : 'popup-cookie popup-cookie--hidden'}>\r\n      <div className=\"popup-cookie__block\">\r\n        <p className=\"popup-cookie__text\">\r\n          Мы, как и все,\r\n          используем <a className=\"popup-cookie__link\" id=\"cookie\" href=\"#\">cookie</a>\r\n        </p>\r\n        <button className=\"popup-cookie__button btn\" id=\"app\" onClick={()=>setVisibleCookie(false)}>Я понимаю</button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n//import \"../css/App.css\";\r\nimport { AppRoute } from '../../const';\r\nimport CategoriesPage from '../categories-page/categories-page';\r\nimport CoursesByCategoryPage from '../courses-by-category-page/courses-by-category-page';\r\n\r\nimport { MainPage } from '../main-page/main-page';\r\nimport CoursePage from '../course-page/course-page';\r\nimport CoursesPage from '../courses-page/courses-page';\r\nimport NotFoundPage from '../not-found-page/not-found-page';\r\nimport PartnerPage from '../partner-page/partner-page';\r\nimport PracticesPage from '../practices-page/practices-page';\r\nimport PracticePage from '../practice-page/practice-page';\r\nimport SearchResultPage from '../search-result-page/search-result-page';\r\n\r\nimport InstructorPage from '../instructor-page/instructor-page';\r\n\r\nimport PopUpCookie from '../popup-cookie/popup-cookie';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <>\r\n        <Switch>\r\n          <Route exact path={AppRoute.ROOT}>\r\n            <MainPage />\r\n          </Route>\r\n          <Route exact path={AppRoute.COURSES}>\r\n            <CoursesPage />\r\n          </Route>\r\n          <Route exact path={AppRoute.COURSE}>\r\n            <CoursePage />\r\n          </Route>\r\n\r\n          <Route exact path={AppRoute.PRACTICE}>\r\n            <PracticePage />\r\n          </Route>\r\n\r\n          <Route exact path={AppRoute.PRACTICES}>\r\n            <PracticesPage />\r\n          </Route>\r\n          <Route exact path={AppRoute.CATEGORIES}>\r\n            <CategoriesPage />\r\n          </Route>\r\n          <Route exact path={AppRoute.SEARCH_RESULT}>\r\n            <SearchResultPage />\r\n          </Route>\r\n          <Route exact path={AppRoute.COURSES_BY_CATEGORY}>\r\n            <CoursesByCategoryPage />\r\n          </Route>\r\n\r\n          <Route exact path={AppRoute.INSTRUCTOR}>\r\n            <InstructorPage />\r\n          </Route>\r\n\r\n          <Route exact path={AppRoute.PARTNERS}>\r\n            <PartnerPage />\r\n          </Route>\r\n\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n        </Switch>\r\n        <PopUpCookie />\r\n\r\n      </>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n// import { coursesSlice } from './store/api/courses-slice';\r\nimport { wordPressApi } from './store/api/word-press-api';\r\nimport './sass/style.scss';\r\nimport App from './components/app/app';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [wordPressApi.reducerPath]: wordPressApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(wordPressApi.middleware),\r\n});\r\n\r\n// Start fetching courses (most fat resource) as soon as possible.\r\n// Courses will be permanently added to RTK Query cache.\r\n// https://redux.js.org/tutorials/essentials/part-8-rtk-query-advanced#fetching-users-manually\r\n// store.dispatch(coursesSlice.endpoints.getCourses.initiate());\r\n\r\n// needed?\r\n// setupListeners(store.dispatch);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}